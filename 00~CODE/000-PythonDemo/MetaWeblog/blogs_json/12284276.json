{'dateCreated': <DateTime '20200208T18:08:00' at 0x1a4f2587988>, 'description': '# 创建一个Android Studio普通项目\n\n# 导入module\n\n选择 File → New → Import Module\n\n选择解压好的opencv-android-sdk下的sdk下的java，点OK\n\n然后选择 Next ， Finish\n\n# 依赖Module\n\n依照下面步骤添加module依赖\n\n![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200208180659712-649779706.png)\n\n\n# 添加JNI依赖库\n\n在app的main下面创建一个jniLibs文件夹，将sdk的native下的libs下的东西全部拷贝进去\n\n**或者放到app下的libs里**\n\n![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200208180710465-113379047.png)\n\n\n# 修改gradle配置文件\n\n添加以下内容：\n\n    task nativeLibsToJar(type: Jar, description: \'create a jar archive of the native libs\') {\n        destinationDir file("$buildDir/native-libs")\n        baseName \'native-libs\'\n        from fileTree(dir: \'libs\', include: \'**/*.so\')\n        into \'lib/\'\n    }\n    \n    tasks.withType(JavaCompile) {\n        CompileTask -> CompileTask.dependsOn(nativeLibsToJar)\n    }\n\n然后再项目以来里再加一句：\n\n    implementation fileTree(dir: "$buildDir/native-libs", include: \'native-libs.jar\')\n\n![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200208180729347-629403150.png)\n\n\n# 代码测试\n\n先拉一个按钮和一个ImageView上去\n\n![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200208180743348-366567375.png)\n\n\n测试代码：\n\n    package com.wby.opencvdemo;\n    \n    import android.graphics.Bitmap;\n    import android.graphics.BitmapFactory;\n    import android.support.v7.app.AppCompatActivity;\n    import android.os.Bundle;\n    import android.util.Log;\n    import android.view.View;\n    import android.widget.Button;\n    import android.widget.ImageView;\n    \n    import org.opencv.android.OpenCVLoader;\n    import org.opencv.android.Utils;\n    import org.opencv.core.CvType;\n    import org.opencv.core.Mat;\n    import org.opencv.imgproc.Imgproc;\n    \n    public class MainActivity extends AppCompatActivity {\n    \n        @Override\n        protected void onCreate(Bundle savedInstanceState) {\n            super.onCreate(savedInstanceState);\n            setContentView(R.layout.activity_main);\n    \n            staticLoadCVLibraries();\n    \n            Button gray_btn = findViewById(R.id.gray_btn);\n            // 点击按钮，将图片转换为灰度图\n            gray_btn.setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View view) {\n                    convert2Gray();\n                }\n            });\n    \n        }\n    \n        // OpenCV库静态加载及初始化\n        private void staticLoadCVLibraries() {\n            boolean load = OpenCVLoader.initDebug();\n            if(load) {\n                Log.i("CV", "Open CV Libraries loaded !");\n            }\n        }\n    \n        public void convert2Gray() {\n            Mat src  = new Mat();\n            Mat temp = new Mat();\n            Mat dst = new Mat();\n            // 读取图像\n            Bitmap image = BitmapFactory.decodeResource(this.getResources(), R.drawable.lena);\n            // 将c++的mat对象转换为android的bitmap对象\n            Utils.bitmapToMat(image, src);\n            // 因为安卓一般是RGB色彩空间，而opencv一般是bgr色彩空间，所以这里做一个转换\n            Imgproc.cvtColor(src, temp, Imgproc.COLOR_RGB2BGR);\n            Log.i("CV", "image type: " + (temp.type() == CvType.CV_8UC3));\n            // 再次转换为灰度色彩空间\n            Imgproc.cvtColor(temp, dst, Imgproc.COLOR_BGR2GRAY);\n            // 将转换结果变为bitmap类型\n            Utils.matToBitmap(dst, image);\n    \n            ImageView imageView = findViewById(R.id.imageView);\n            // 设置ImageView的图像为转换完的灰度图像\n            imageView.setImageBitmap(image);\n    \n            // 释放\n            src.release();\n            temp.release();\n            dst.release();\n        }\n    }', 'title': 'AndroidStudio3.3+OpenCV开发环境搭建', 'categories': ['[随笔分类]OpenCV~Android开发', '[随笔分类]工具~AndroidStudio'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12284276.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12284276.html', 'postid': '12284276', 'source': {}, 'userid': '-2'}