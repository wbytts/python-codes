{'dateCreated': <DateTime '20191202T03:02:00' at 0x1a4f2a28a08>, 'description': '# 语句\n\nJavaScript 程序的执行单位为行（line），也就是一行一行地执行。一般情况下，每一行就是一个语句。\n\n语句（statement）是为了完成某种任务而进行的操作，比如下面就是一行赋值语句。\n```js\nvar a = 1 + 3;\n```\n这条语句先用var命令，声明了变量a，然后将1 + 3的运算结果赋值给变量a。\n`1 + 3`叫做表达式（expression），指一个为了得到返回值的计算式。\n语句和表达式的区别在于，前者主要为了进行某种操作，一般情况下不需要返回值；后者则是为了得到返回值，一定会返回一个值。\n凡是 JavaScript 语言中预期为值的地方，都可以使用表达式。\n比如，赋值语句的等号右边，预期是一个值，因此可以放置各种表达式。\n\n语句以分号结尾，一个分号就表示一个语句结束。多个语句可以写在一行内。\n\n分号前面可以没有任何内容，JavaScript 引擎将其视为空语句。\n\n表达式不需要分号结尾。一旦在表达式后面添加分号，则 JavaScript 引擎就将表达式视为语句，这样会产生一些没有任何意义的语句。\n\n# 注释\n\n单行注释：\n```js\n// .....单行注释\n```\n\n多行注释：\n```js\n/*\n\t这里是多行注释\n\t这里是多行注释\n*/\n```\n\n此外，还兼容 HTML 的注释\n\n# 区块\n\n大括号，将多个语句组合在一起，叫做区块\n\n对于var命令来说，js区块不构成单独的作用域（scope）\n```js\n{\n  var a = 1;\n}\n\na // 1\n```\n\n> 上面代码在区块内部，使用var命令声明并赋值了变量a，然后在区块外部，变量a依然有效，区块对于var命令不构成单独的作用域，与不使用区块的情况没有任何区别。在 JavaScript 语言中，单独使用区块并不常见，区块往往用来构成其他更复杂的语法结构，比如for、if、while、function等。\n\n\n# 条件\n\n## if 结构\n\n```js\nif (布尔值)\n  语句;\n\n// 或者\nif (布尔值) 语句;\n```\n\n```js\nif (布尔值) {\n  // 满足条件时，执行的语句\n} else {\n  // 不满足条件时，执行的语句\n}\n```\n\n`if else` 的结构可以接着写多个，进行多个条件的判断\n\n## switch 结构\n\n```js\nswitch (变量) {\n  case 值1:\n    // ...\n    break;\n  case 值2:\n    // ...\n    break;\n  default:\n    // ...\n}\n```\n\nbreak用来跳出 switch语句，否则会继续执行下一个case\n\n## 三元运算符\n\n```js\n(条件) ? 表达式1 : 表达式2\n```\n\n# 循环\n\n## while 循环\n\n只要条件为真，就不断循环执行代码块\n```js\nwhile (条件)\n  语句;\n\n// 或者\nwhile (条件) 语句;\n```\n\n## do...while 循环\n\n与while循环类似，唯一的区别就是先运行一次循环体，然后判断循环条件\n\n```js\ndo\n  语句\nwhile (条件);\n\n// 或者\ndo {\n  语句\n} while (条件);\n```\n\n不管条件是否为真，do...while循环至少运行一次，这是这种结构最大的特点。另外，while语句后面的分号注意不要省略。\n\n## for 循环\n\n```js\nfor (初始化表达式; 条件; 递增表达式)\n  语句\n\n// 或者\n\nfor (初始化表达式; 条件; 递增表达式) {\n  语句\n}\n```\n\n+ 初始化表达式（initialize）：确定循环变量的初始值，只在循环开始时执行一次。\n+ 条件表达式（test）：每轮循环开始时，都要执行这个条件表达式，只有值为真，才继续进行循环。\n+ 递增表达式（increment）：每轮循环的最后一个操作，通常用来递增循环变量。\n\n## break 与 continue\n\nbreak语句和continue语句都具有跳转作用，可以让代码不按既有的顺序执行。\n\nbreak语句用于跳出代码块或循环。\n\ncontinue语句用于立即终止本轮循环，返回循环结构的头部，开始下一轮循环。\n\n如果存在多重循环，不带参数的break语句和continue语句都只针对最内层循环。\n\n## 标签 label\n\n语句的前面有标签（label），相当于定位符，用于跳转到程序的任意位置，标签的格式如下。\n```js\nlabel:\n  语句\n```\n\n标签可以是任意的标识符，但不能是保留字，语句部分可以是任意语句。\n\n标签通常与break语句和continue语句配合使用，跳出特定的循环。\n\n# ~~~~~ END ~~~~~', 'title': 'js学习：基本语法结构', 'categories': ['[随笔分类]FrontEnd~JavaScript'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/11968602.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/11968602.html', 'postid': '11968602', 'source': {}, 'userid': '-2'}