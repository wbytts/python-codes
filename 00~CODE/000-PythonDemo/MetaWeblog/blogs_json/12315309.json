{'dateCreated': <DateTime '20200215T23:34:00' at 0x1a4f257b508>, 'description': '![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200215231743393-897454108.png)\n![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200215232101238-2055524151.png)\n\n```c++\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace cv;\nusing namespace std;\nRNG rng(12345);\n\nvoid contour_info(Mat &image, vector<vector<Point>> &contours);\n\nint main(int argc, char** argv)\n{\n    Mat src1 = imread("f:/images/qq/20200215213837.png"); // 查找的图像\n    Mat src2 = imread("f:/images/qq/one_mi.png"); //模板\n    //Mat src = imread("f:/images/qq/yezi.png");\n    if (src1.empty() || src2.empty())\n    {\n        printf("Could not find the image!\\n");\n        return -1;\n    }\n\n    //namedWindow("input", WINDOW_AUTOSIZE);\n    imshow("input1", src1);\n    imshow("input2", src2);\n\n    vector<vector<Point>> contours1;\n    vector<vector<Point>> contours2;\n    contour_info(src1, contours1);\n    contour_info(src2, contours2);\n    \n    Moments mm2 = moments(contours2[0]);\n    Mat hu2;\n    HuMoments(mm2, hu2);\n\n    for (size_t t = 0; t < contours1.size(); t++) {\n        Moments mm = moments(contours1[t]);\n        // 计算每个轮廓的中心位置\n        double cx = mm.m10 / mm.m00;\n        double cy = mm.m01 / mm.m00;\n        circle(src1, Point(cx, cy), 3, Scalar(0, 255, 0), 2, 8, 0);\n        Mat hu;\n        HuMoments(mm, hu);\n        double dist = matchShapes(hu, hu2, CONTOURS_MATCH_I1, 0);\n        if (dist < 1.0) {\n            drawContours(src1, contours1, t, Scalar(0, 0, 255), 2, 8);\n        }\n    }\n    imshow("match contours demo", src1);\n\n    waitKey(0);\n    destroyAllWindows();\n\n    return 0;\n}\n\nvoid contour_info(Mat& image, vector<vector<Point>>& contours) {\n    Mat dst;\n    GaussianBlur(image, dst, Size(3, 3), 0);\n    Mat gray, binary;\n    cvtColor(dst, gray, COLOR_BGR2GRAY);\n    threshold(gray, binary, 0, 255, THRESH_BINARY | THRESH_OTSU);\n    vector<Vec4i> hierarchy;\n    findContours(binary, contours, hierarchy, RETR_EXTERNAL, CHAIN_APPROX_SIMPLE, Point());\n}\n\n\n```', 'title': 'opencv：轮廓匹配', 'categories': ['[随笔分类]OpenCV'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12315309.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12315309.html', 'postid': '12315309', 'source': {}, 'userid': '-2'}