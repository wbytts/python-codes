{'dateCreated': <DateTime '20191201T01:05:00' at 0x1a4f2a28dc8>, 'description': '## 使用函数的缺点\n\n如果我们想要将数据经过转化后再显示，或者多个数据结合起来进行显示，一般可以直接在数据渲染或者数据绑定的时候书写表达式\n\n如果表达式过于复杂，或者逻辑太多的时候，我们可以将其封装在函数里，写在 `methods` 选项里\n\n而，使用函数的话，每次调用都会重新计算一次，对于不经常改变的数据，使用函数会特别影响性能\n\n\n## 计算属性的简单使用\n\n将数据经过处理再显示出来，我们可以使用计算属性computed：\n> 计算属性是有缓存的，性能比直接用methods好\n\n![](https://img2018.cnblogs.com/blog/1446249/201912/1446249-20191201010952438-1756032331.png)\n\n计算属性定义好之后，用法和普通的data里定义的属性一样\n\n## 计算属性的复杂操作\n\n函数是单向的，而计算属性可以有setter和getter，可以支持双向的\n\n计算属性如果不指定，则默认只有getter，如果想要计算属性支持setter属性，需要分别定义getter和setter方法\n\n计算属性的setter和getter：\n![](https://img2018.cnblogs.com/blog/1446249/201912/1446249-20191201010953032-1779223930.png)\n\n## ~~~~~ END ~~~~~', 'title': 'Vue学习笔记：计算属性', 'categories': ['[随笔分类]FrontEnd~Vue'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/11964847.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/11964847.html', 'postid': '11964847', 'source': {}, 'userid': '-2'}