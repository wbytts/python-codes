{'dateCreated': <DateTime '20200120T21:12:00' at 0x1a4f29d0cc8>, 'description': '# 字符串概念\n\n字符串：由单个字符组成的一个序列，\n\n字符串是一个不可变的类型\n\n形式：\n- 非原始字符串：\n  - 单引号：单引号包起来的一段字符就是字符串\n  - 双引号：和单引号一样\n  - 三引号：三引号包括的字符串可以换行，保留所有空白字符（三个单引号或者三个双引号）\n    - 可以用于文档字符串，注释在函数或者类等结构下，可以用help函数进行打印\n- 原始字符串：在非原始字符串前面加一个r前缀\n  - 不进行字符串的转义\n\n# 转义字符\n\n## 常用的转义字符\n\n- `\\n`：换行符\n- `\\t`：制表符\n- `\\"`，`\\\'`：单引号，双引号\n- `\\\\`：打印出 `\\` 本身\n\n## 续行符\n\n`\\` 用在行尾，表示这一行还没写完，把下一行接上来，\n\n注意，如果要作为续行使用，则 `\\` 后面不能再接任何东西\n\n如果是两个字符串要换行，可以分成两个字符串书写，并使用小括号进行包裹\n\n# 字符串的拼接\n\n1. 使用 `+` 连接符：`s1 + s2`\n\n2. 也可以直接把两个字符串放在一起："xxx" "yyy"，可以有多个空格，但是不能换行\n\n3. 使用字符串模板，然后用其他字符串进行填充\n\n# 字符串的重复\n\n`S * n`：字符串S重复n次\n\n# 索引与切片操作\n\n## 索引\n- 从左到右：0, 1, 2, 3, 4, .....\n- 从右到左：-1, -2, .......\n\n可以通过 `字符串[索引]` 访问字符串中的单个字符\n\n**注意：字符串是非可变类型，不能修改字符串中的字符**\n\n总结：\n- 如果n为非负数：`s[n]` 相当于 第 `n+1` 个值\n- 如果n为负数：`s[n]` 相当于：`s[len(s) + n]`\n\n## 切片操作\n\n`s[ 起始索引 : 结束索引 : 步长 ]`\n\n说明：\n- 范围：`[起始, 结束)`：\n- 默认值：起始0， 结束-1， 步长1\n- 顺序：步长大于0则从左到右，步长小于0则从右到左\n  - 注意，不能从头部跳到尾部，或者从尾部跳到头部\n\n例子：\n- 反转字符串：`s[::-1]`\n\n# 包含关系\n\n- `in`：一个字符串，是否被另一个字符串包含\n- `not in`：一个字符串，是否不被另一个字符串包含\n\n# 字符串的长度\n\n`len(x)` ：内建函数len可以求序列类型的长度\n\n\n# 常用的字符串函数\n\n## 查找计算类\n### find\n\n用于查找子串索引位置，从左到右查找，找到后立即停止\n\n语法：`find(sub, start=0, end=len(s))`\n参数：\n- 1.要检索的字符串\n- 2.检索的起始位置，默认为0\n- 3.检索的结束位置，默认为最后\n\n返回值：\n- 如果找到了，返回第一个子串的索引\n- 如果没找到，返回 -1\n\n### rfind\n\n和find一样，区别是从右到左进行查找\n\n### index\n\n代表获取的意思\n\n和find几乎一样，不过找不到会报错\n\n### rindex\n\n和index一样，区别是从右到左进行查找\n\n### count\n\n计算字符串中某个子字符串出现的次数\n\n语法：`count(sub, start=0, end=len(s))`\n\n返回值是子字符串出现的次数\n\n## 转换类\n\n### replace\n\n功能：字符串替换\n\n语法：`replace(old, new[, count])`\n\n参数：\n- 需要替换的内容\n- 用来替换的内容\n- 替换的次数，省略则表示全部替换\n\n返回值：返回替换后的结果字符串\n\n注意：不会改变原始字符串本身的内容\n\n### capitalize\n\n将字符串首字母变为大写，返回改变后的结果\n\n### title\n\n将字符串中每个单词的首字母变成大写\n\n返回改变后的字符串\n\n### lower\n\n将字符串全部变为小写\n\n返回改变后的字符串\n\n### upper\n\n将字符串全部变为大写\n\n返回改变后的字符串\n\n## 填压缩类\n\n### ljust\n\n功能：根据指定字符（一个）在字符串左边进行填充,填充到指定长度\n\n语法：`ljust(width, fillchar)`\n\n参数：\n- width：指定结果字符串的长度\n- fillchar：用来填充的字符\n\n注意：\n- 填充字符长度为1\n- 只有原字符串长度 小于 指定长度时 才会进行填充\n\n### rjust\n\n同 ljust，不过是在字符串右边进行填充\n\n### center\n\n在字符串两边进行填充\n\n### lstrip\n\n功能：移除原字符串指定字符，左边（默认移除 `空白` 字符）\n\n语法：`lstrip(chars)`\n\n参数：chars，表示需要移除的字符串\n\n表现形式为："abc"， 表示移除a或b或c，注意：不是移除 abc\n\n### rstrip\n\n同 lstrip，不过是移除右边的字符串\n\n## 分隔拼接类\n\n### split\n\n将一个字符串分割成几个子字符串\n\n语法：`split(sep, maxsplit)`\n\n参数：\n- sep：分隔符\n- maxsplit：最大分割 `次数`，省略表示有多少分割多少\n\n返回值：分割后的子字符串组成的列表\n\n### partition\n\n从左边开始查找分割符\n根据指定的分割符，返回分割符左边的内容，分割符，分割符右边的内容\n\n语法：`partition(sep)`\n\n返回值：\n- 如果查找到分割符：`(分割符左侧, 分割符, 分割符右侧)`\n- 如果没有查找到分割符：`(原字符串, "", "")`\n\n### rpartition\n\n同lpartition，不过是从右边开始查找分割符\n\n### splitlines\n\n按照换行符进行分割，把字符串拆分成多个字符串，放到列表中\n\n### join\n\n根据指定字符串，将给定的可迭代对象，进行拼接，得到拼接后的字符串\n\n语法：`s.join(iterable)`\n\ns作为分割符，将iterable中的每个元素通过s进行拼接组合\n\n## 判定类\n\n### isalpha\n\n判断是否是字母\n\n### isdigit\n\n判断是否是数字\n\n### isalnum\n\n判断是否是字母或者数字\n\n### isspace\n\n判断是否是空白字符\n\n### startswith\n\n判断是否以某字符串开始\n\n### endswith\n\n判断是否以某字符串结尾', 'title': 'python：字符串类型', 'categories': ['[随笔分类]Python~语法'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12219457.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12219457.html', 'postid': '12219457', 'source': {}, 'userid': '-2'}