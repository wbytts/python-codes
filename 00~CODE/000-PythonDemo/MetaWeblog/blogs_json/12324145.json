{'dateCreated': <DateTime '20200217T22:42:00' at 0x1a4f2575e08>, 'description': '![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200217222340354-1875758478.png)\n![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200217222451851-1087626232.png)\n\n```c++\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace cv;\nusing namespace std;\n\n\nint main(int argc, char** argv)\n{\n    Mat src = imread("f:/images/qq/circle.png");\n    //Mat src = imread("f:/images/qq/yezi.png");\n    if (src.empty())\n    {\n        printf("Could not find the image!\\n");\n        return -1;\n    }\n\n    namedWindow("input", WINDOW_AUTOSIZE);\n    imshow("input", src);\n\n    Mat gray;\n    cvtColor(src, gray, COLOR_BGR2GRAY);\n    GaussianBlur(gray, gray, Size(9,9), 2, 2);\n    imshow("gray", gray);\n\n    vector<Vec3f> circles;\n    int minDist = 20;\n    double min_radius = 5;\n    double max_radius = 100;\n    // 接收灰度图像，要降噪，对噪声很敏感\n    HoughCircles(gray, circles, HOUGH_GRADIENT, 3, minDist, 100, 100, max_radius, min_radius);\n    for (size_t t = 0; t < circles.size(); t++) {\n        Point center(circles[t][0], circles[t][1]);\n        int radius = round(circles[t][2]);\n        // 绘制圆\n        circle(src, center, radius, Scalar(0, 0, 255), 2, 8, 0);\n        circle(src, center, 3, Scalar(255, 0, 0), 2, 8, 0);\n    }\n\n    imshow("hough circle demo", src);\n    \n    waitKey(0);\n    destroyAllWindows();\n\n    return 0;\n}\n\n\n\n```\n', 'title': 'opencv：霍夫圆检测', 'categories': ['[随笔分类]OpenCV'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12324145.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12324145.html', 'postid': '12324145', 'source': {}, 'userid': '-2'}