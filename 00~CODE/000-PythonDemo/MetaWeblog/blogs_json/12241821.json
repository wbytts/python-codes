{'dateCreated': <DateTime '20200129T23:17:00' at 0x1a4f299df08>, 'description': '\n```c++\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace cv;\nusing namespace std;\n\nint main(int argc, char** argv)\n{\n    // 图像内存对象，在C++中是以Mat对象形式保存的\n    Mat img = imread("f:/temp/images/lena.jpg");\n    /*\n        imread的默认选项：IMREAD_COLOR，默认会将图像加载为一张BGR的彩色图像\n        IMREAD_GRAYSCALE：加载一张灰度图像\n        IMREAD_ANYCOLOR：\n        IMREAD_UNCHANGED：不改变，加载透明通道的图片要使用这个\n    */\n\n    // 读取灰度图像\n    //Mat img = imread("C:\\\\Users\\\\hp\\\\Desktop\\\\Emoticon\\\\q.jpg", IMREAD_GRAYSCALE);\n\n    // 判断图像是否读取成功，如果读取成功，empty返回true\n    if (img.empty())\n    {\n        printf("Could not find the image!\\n");\n        return -1;\n    }\n\n    // 创建窗口，默认选项是 WINDOW_AUTOSIZE\n    // 选项：\n    // WINDOW_AUTOSIZE：表示自动匹配，不好修改窗口大小\n    // WINDOW_FREEATIO：可以修改窗口的大小\n    // WINDOW_NORMAL：也可以修改窗口\n    namedWindow("input", WINDOW_AUTOSIZE);\n\n    // 在指定窗口上显示一张图像\n    // imshow 本身不支持透明通道的显示\n    imshow("input", img);\n\n    // 色彩空间转换\n    Mat gray;\n    // 转换为灰度图像\n    // 参数1：要转换的图像，参数2：存储转换结果的，参数3：转换的选项\n    cvtColor(img, gray, COLOR_BGR2GRAY);\n    imshow("gray", gray);\n\n    // 将图像写入文件\n    // 这个图像如果保存出错了，是不会有提示的\n    imwrite("f:/temp/test/gray.png", gray);\n\n    waitKey(0);\n\n    // 销毁所有窗口\n    destroyAllWindows();\n}\n```', 'title': 'opencv：图像的读取，显示，写入文件', 'categories': ['[随笔分类]OpenCV'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12241821.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12241821.html', 'postid': '12241821', 'source': {}, 'userid': '-2'}