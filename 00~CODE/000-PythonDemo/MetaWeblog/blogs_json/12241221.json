{'dateCreated': <DateTime '20200129T20:36:00' at 0x1a4f29a0e48>, 'description': 'EPF：E边缘，P保留，F滤波\n\n```python\nimport cv2 as cv\nimport numpy as np\n\n\ndef bi_demo(image):  # bilateralFilter(src, d, sigmaColor, sigmaSpace, dst=None, borderType=None)\n    """\n    同时考虑空间与信息和灰度相似性，达到保边去噪的目的\n    双边滤波的核函数是空间域核与像素范围域核的综合结果：\n    在图像的平坦区域，像素值变化很小，对应的像素范围域权重接近于1，此时空间域权重起主要作用，相当于进行高斯模糊；\n    在图像的边缘区域，像素值变化很大，像素范围域权重变大，从而保持了边缘的信息。\n    """\n    dst = cv.bilateralFilter(image, 0, 100, 15)  # 高斯双边\n    cv.imshow("bi_demo", dst)\n\n\n# pyrMeanShiftFiltering(src, sp, sr, dst=None, maxLevel=None, termcrit=None)\n# @param src The source 8-bit, 3-channel image.\n# @param dst The destination image of the same format and the same size as the source.\n# @param sp The spatial window radius.\n# @param sr The color window radius.\n# @param maxLevel Maximum level of the pyramid for the segmentation.\n# @param termcrit Termination criteria: when to stop meanshift iterations.\ndef shift_demo(image):  # 均值迁移\n    dst = cv.pyrMeanShiftFiltering(image, 10, 50)\n    cv.imshow("shift_demo", dst)\n\nif __name__ == \'__main__\':\n    src = cv.imread("../images/CrystalLiu1.jpg")  # 读入图片放进src中\n    cv.namedWindow("Crystal Liu")  # 创建窗口\n    cv.imshow("Crystal Liu", src)  # 将src图片放入该创建的窗口中\n    bi_demo(src)\n    shift_demo(src)\n\n    cv.waitKey(0) # 等有键输入或者1000ms后自动将窗口消除，0表示只用键输入结束窗口\n    cv.destroyAllWindows()  # 关闭所有窗口\n```\n', 'title': 'opencv python：边缘保留滤波（EPF）', 'categories': ['[随笔分类]OpenCV~Python', '[随笔分类]OpenCV'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12241221.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12241221.html', 'postid': '12241221', 'source': {}, 'userid': '-2'}