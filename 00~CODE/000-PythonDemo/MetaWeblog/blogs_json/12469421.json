{'dateCreated': <DateTime '20200312T15:09:00' at 0x1a4f2569288>, 'description': '原文章：https://wangdoc.com/javascript/index.html\n# 数组\n\n## 定义\n\n数组（array）是按次序排列的一组值。每个值的位置都有编号（从0开始），整个数组用方括号表示。\n\n```javascript\nvar arr = [\'a\', \'b\', \'c\'];\n```\n\n上面代码中的`a`、`b`、`c`就构成一个数组，两端的方括号是数组的标志。`a`是0号位置，`b`是1号位置，`c`是2号位置。\n\n除了在定义时赋值，数组也可以先定义后赋值。\n\n```javascript\nvar arr = [];\n\narr[0] = \'a\';\narr[1] = \'b\';\narr[2] = \'c\';\n```\n\n任何类型的数据，都可以放入数组。\n\n```javascript\nvar arr = [\n  {a: 1},\n  [1, 2, 3],\n  function() {return true;}\n];\n\narr[0] // Object {a: 1}\narr[1] // [1, 2, 3]\narr[2] // function (){return true;}\n```\n\n上面数组`arr`的3个成员依次是对象、数组、函数。\n\n如果数组的元素还是数组，就形成了多维数组。\n\n```javascript\nvar a = [[1, 2], [3, 4]];\na[0][1] // 2\na[1][1] // 4\n```\n\n## 数组的本质\n\n本质上，数组属于一种特殊的对象。`typeof`运算符会返回数组的类型是`object`。\n\n```javascript\ntypeof [1, 2, 3] // "object"\n```\n\n上面代码表明，`typeof`运算符认为数组的类型就是对象。\n\n数组的特殊性体现在，它的键名是按次序排列的一组整数（0，1，2...）。\n\n```javascript\nvar arr = [\'a\', \'b\', \'c\'];\n\nObject.keys(arr)\n// ["0", "1", "2"]\n```\n\n上面代码中，`Object.keys`方法返回数组的所有键名。可以看到数组的键名就是整数0、1、2。\n\n由于数组成员的键名是固定的（默认总是0、1、2...），因此数组不用为每个元素指定键名，而对象的每个成员都必须指定键名。JavaScript 语言规定，对象的键名一律为字符串，所以，数组的键名其实也是字符串。之所以可以用数值读取，是因为非字符串的键名会被转为字符串。\n\n```javascript\nvar arr = [\'a\', \'b\', \'c\'];\n\narr[\'0\'] // \'a\'\narr[0] // \'a\'\n```\n\n上面代码分别用数值和字符串作为键名，结果都能读取数组。原因是数值键名被自动转为了字符串。\n\n注意，这点在赋值时也成立。一个值总是先转成字符串，再作为键名进行赋值。\n\n```javascript\nvar a = [];\n\na[1.00] = 6;\na[1] // 6\n```\n\n上面代码中，由于`1.00`转成字符串是`1`，所以通过数字键`1`可以读取值。\n\n上一章说过，对象有两种读取成员的方法：点结构（`object.key`）和方括号结构（`object[key]`）。但是，对于数值的键名，不能使用点结构。\n\n```javascript\nvar arr = [1, 2, 3];\narr.0 // SyntaxError\n```\n\n上面代码中，`arr.0`的写法不合法，因为单独的数值不能作为标识符（identifier）。所以，数组成员只能用方括号`arr[0]`表示（方括号是运算符，可以接受数值）。\n\n## length 属性\n\n数组的`length`属性，返回数组的成员数量。\n\n```javascript\n[\'a\', \'b\', \'c\'].length // 3\n```\n\nJavaScript 使用一个32位整数，保存数组的元素个数。这意味着，数组成员最多只有 4294967295 个（2<sup>32</sup> - 1）个，也就是说`length`属性的最大值就是 4294967295。\n\n只要是数组，就一定有`length`属性。该属性是一个动态的值，等于键名中的最大整数加上`1`。\n\n```javascript\nvar arr = [\'a\', \'b\'];\narr.length // 2\n\narr[2] = \'c\';\narr.length // 3\n\narr[9] = \'d\';\narr.length // 10\n\narr[1000] = \'e\';\narr.length // 1001\n```\n\n上面代码表示，数组的数字键不需要连续，`length`属性的值总是比最大的那个整数键大`1`。另外，这也表明数组是一种动态的数据结构，可以随时增减数组的成员。\n\n`length`属性是可写的。如果人为设置一个小于当前成员个数的值，该数组的成员会自动减少', 'title': 'javascript：数据结构-数组', 'categories': ['[随笔分类]FrontEnd~JavaScript'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12469421.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12469421.html', 'postid': '12469421', 'source': {}, 'userid': '-2'}