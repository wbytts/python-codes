{'dateCreated': <DateTime '20191231T15:55:00' at 0x1a4f2a11888>, 'description': '# 新建一个 django project\n\n```cmd\ndjango-admin.py startproject project_name\n```\n\n特别是在 windows 上，如果报错，尝试用 `django-admin` 代替 `django-admin.py` 试试\n\n注意 project_name 是自己的项目名称，需要为合法的 Python 包名，如不能为 1a 或 a-b\n\n# 新建 app\n\n要先进入项目目录下，`cd project_name` 然后执行下面的命令（下同，已经在项目目录下则不需要 `cd project_name`）\n\n```cmd\npython manage.py startapp app_name\n或 django-admin.py startapp app_name\n```\n\n一般一个项目有多个app, 当然通用的app也可以在多个项目中使用。\n\n与项目名类似 app name 也需要为合法的 Python 包名，如 blog，news, aboutus 等都是合法的 app 名称。\n\n# 创建数据库表 或 更改数据库表或字段\n\n```cmd\n# 1. 创建更改的文件\npython manage.py makemigrations\n \n# 2. 将生成的py文件应用到数据库\npython manage.py migrate\n```\n\n这种方法可以在SQL等数据库中创建与models.py代码对应的表，不需要自己手动执行SQL。\n\n备注：对已有的 models 进行修改，Django 1.7之前的版本的Django都是无法自动更改表结构的，不过有第三方工具 south\n\n# 使用开发服务器\n\n开发服务器，即开发时使用，一般修改代码后会自动重启，方便调试和开发，但是由于性能问题，建议只用来测试，不要用在生产环境。\n\n```cmd\npython manage.py runserver\n \n# 当提示端口被占用的时候，可以用其它端口：\npython manage.py runserver 8001\npython manage.py runserver 9999\n（当然也可以kill掉占用端口的进程，具体后面有讲，此处想知道的同学可查下 lsof 命令用法）\n \n# 监听机器所有可用 ip （电脑可能有多个内网ip或多个外网ip）\npython manage.py runserver 0.0.0.0:8000\n \n# 如果是外网或者局域网电脑上可以用其它电脑查看开发服务器\n# 访问对应的 ip加端口，比如 http://172.16.20.2:8000\n```\n\n# 清空数据库\n\n```cmd\npython manage.py flush\n```\n此命令会询问是 yes 还是 no, 选择 yes 会把数据全部清空掉，只留下空表。\n\n# 创建超级管理员\n\n```cmd\npython manage.py createsuperuser\n \n# 按照提示输入用户名和对应的密码就好了邮箱可以留空，用户名和密码必填\n \n# 修改 用户密码可以用：\npython manage.py changepassword username\n```\n\n# 导出数据 导入数据\n\n```cmd\npython manage.py dumpdata appname > appname.json\npython manage.py loaddata appname.json\n```\n\n# Django 项目环境终端\n\n```cmd\npython manage.py shell\n```\n如果你安装了 bpython 或 ipython 会自动用它们的界面，推荐安装 bpython。\n\n这个命令和 直接运行 python 或 bpython 进入 shell 的区别是：你可以在这个 shell 里面调用当前项目的 models.py 中的 API，对于操作数据，还有一些小测试非常方便。\n\n# 数据库命令行\n\n```cmd\npython manage.py dbshell\n```\nDjango 会自动进入在settings.py中设置的数据库，如果是 MySQL 或 postgreSQL,会要求输入数据库用户密码。\n\n在这个终端可以执行数据库的SQL语句。如果您对SQL比较熟悉，可能喜欢这种方式。\n\n# 更多命令\n\n终端上输入 python manage.py 可以看到详细的列表，在忘记子名称的时候特别有用。', 'title': 'django 常用命令', 'categories': ['[随笔分类]Python~Django'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12124875.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12124875.html', 'postid': '12124875', 'source': {}, 'userid': '-2'}