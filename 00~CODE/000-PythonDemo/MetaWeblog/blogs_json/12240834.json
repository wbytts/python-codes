{'dateCreated': <DateTime '20200129T17:28:00' at 0x1a4f29a3248>, 'description': '# 作用域\nC语言变量的作用域分为：\n- 代码块作用域(代码块是{}之间的一段代码)\n- 函数作用域\n- 文件作用域\n\n# 局部变量\n\n局部变量也叫auto自动变量(auto可写可不写)，一般情况下代码块{}内部定义的变量都是自动变量，它有如下特点：\n- 在一个函数内定义，只在函数范围内有效\n- 在复合语句中定义，只在复合语句中有效\n- 随着函数调用的结束或复合语句的结束局部变量的声明声明周期也结束\n- 如果没有赋初值，内容为随机\n\n```c\n#include <stdio.h>\n\nvoid test()\n{\n\t//auto写不写是一样的\n\t//auto只能出现在{}内部\n\tauto int b = 10; \n}\n\nint main(void)\n{\n\t//b = 100; //err， 在main作用域中没有b\n\n\tif (1)\n\t{\n\t\t//在复合语句中定义，只在复合语句中有效\n\t\tint a = 10;\n\t\tprintf("a = %d\\n", a);\n\t}\n\n\t//a = 10; //err离开if()的复合语句，a已经不存在\n\t\n\treturn 0;\n}\n```\n\n# 静态(static)局部变量\n\n- static局部变量的作用域也是在定义的函数内有效\n- static局部变量的生命周期和程序运行周期一样，同时staitc局部变量的值只初始化一次，但可以赋值多次\n- static局部变量若未赋以初值，则由系统自动赋值：数值型变量自动赋初值0，字符型变量赋空字符\n\n```c\n#include <stdio.h>\n\nvoid fun1()\n{\n\tint i = 0;\n\ti++;\n\tprintf("i = %d\\n", i);\n}\n\nvoid fun2()\n{\n\t//静态局部变量，没有赋值，系统赋值为0，而且只会初始化一次\n\tstatic int a;\n\ta++;\n\tprintf("a = %d\\n", a);\n}\n\nint main(void)\n{\n\tfun1();\n\tfun1();\n\tfun2();\n\tfun2();\n\t\n\treturn 0;\n}\n```\n\n# 全局变量\n\n- 在函数外定义，可被本文件及其它文件中的函数所共用，若其它文件中的函数调用此变量,须用extern声明\n- 全局变量的生命周期和程序运行周期一样\n- 不同文件的全局变量不可重名\n\n# 静态(static)全局变量\n\n- 在函数外定义,作用范围被限制在所定义的文件中\n- 不同文件静态全局变量可以重名,但作用域不冲突\n- static全局变量的生命周期和程序运行周期一样，同时staitc全局变量的值只初始化一次\n\n# extern全局变量声明\n\n`extern int a;` 声明一个变量，这个变量在别的文件中已经定义了，这里只是声明，而不是定义。\n\n# 全局函数和静态函数\n\n在C语言中函数默认都是全局的，使用关键字static可以将函数声明为静态，函数定义为static就意味着这个函数只能在定义这个函数的文件中使用，在其他文件中不能调用，即使在其他文件中声明这个函数都没用。\n\n对于不同文件中的staitc函数名字可以相同。\n![](https://img2018.cnblogs.com/blog/1446249/202001/1446249-20200129172743638-1753264583.png)\n\n注意：\n- 允许在不同的函数中使用相同的变量名，它们代表不同的对象，分配不同的单元，互不干扰。\n- 同一源文件中,允许全局变量和局部变量同名，在局部变量的作用域内，全局变量不起作用。\n- 所有的函数默认都是全局的，意味着所有的函数都不能重名，但如果是staitc函数，那么作用域是文件级的，所以不同的文件static函数名是可以相同的。\n', 'title': 'C：作用域', 'categories': ['[随笔分类]C/C++~C语言'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12240834.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12240834.html', 'postid': '12240834', 'source': {}, 'userid': '-2'}