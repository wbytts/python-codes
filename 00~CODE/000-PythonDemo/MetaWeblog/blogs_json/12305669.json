{'dateCreated': <DateTime '20200213T22:38:00' at 0x1a4f2580f88>, 'description': '![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200213223427187-715944824.png)\n![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200213223434796-287453860.png)\n![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200213223443199-318445500.png)\n![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200213223453872-92364635.png)\n![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200213223510906-257364614.png)\n\n```c++\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace cv;\nusing namespace std;\n\nint t1 = 50;\nMat src;\nvoid canny_demo(int, void*) {\n    Mat edges;\n    Canny(src, edges, t1, t1 * 3, 3, false);\n    imshow("edges", edges);\n}\n\nint main(int argc, char** argv)\n{\n    src = imread("f:/images/lena.jpg");\n    if (src.empty())\n    {\n        printf("Could not find the image!\\n");\n        return -1;\n    }\n\n    namedWindow("input", WINDOW_AUTOSIZE);\n    imshow("input", src);\n\n    // Canny Demo\n    createTrackbar("threshold value:", "input", &t1, 100, canny_demo);\n    canny_demo(0, 0);\n\n    waitKey(0);\n    destroyAllWindows();\n\n    return 0;\n}\n\n```', 'title': 'opencv：边缘提取', 'categories': ['[随笔分类]OpenCV'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12305669.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12305669.html', 'postid': '12305669', 'source': {}, 'userid': '-2'}