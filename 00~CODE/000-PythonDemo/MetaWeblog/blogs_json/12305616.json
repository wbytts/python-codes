{'dateCreated': <DateTime '20200213T22:28:00' at 0x1a4f2583b08>, 'description': '常见噪声的类型：\n\n- 椒盐噪声\n- 高斯噪声\n- 其他噪声。。。。。。\n\n手动生成图像噪声：\n```c++\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace cv;\nusing namespace std;\n\nint main(int argc, char** argv)\n{\n    Mat src = imread("f:/images/lena.jpg");\n    if (src.empty())\n    {\n        printf("Could not find the image!\\n");\n        return -1;\n    }\n\n    namedWindow("input", WINDOW_AUTOSIZE);\n    imshow("input", src);\n\n    // salt and peper 椒盐噪声\n    RNG rng(12345);\n    int h = src.rows;\n    int w = src.cols;\n    int nums = 10000;\n    for (int i = 0; i < nums; i++) {\n        int x = rng.uniform(0, w);\n        int y = rng.uniform(0, h);\n        if (i % 2 == 1) {\n            src.at<Vec3b>(y, x) = Vec3b(255, 255, 255);\n        }\n        else {\n            src.at<Vec3b>(y, x) = Vec3b(0, 0, 0);\n        }\n    }\n    imshow("salt and pepper noise", src);\n    \n    // 高斯噪声\n    Mat image = src.clone();\n    Mat noise = Mat::zeros(image.size(), image.type());\n    // 图像，均值，方差，显示一幅随机图像\n    randn(noise, Scalar(25, 15, 45), Scalar(60, 40, 30));\n    Mat dst;\n    add(image, noise, dst);\n    imshow("gaussian noise", dst);\n\n    waitKey(0);\n    destroyAllWindows();\n\n    return 0;\n}\n```', 'title': 'opencv：图像噪声', 'categories': ['[随笔分类]OpenCV'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12305616.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12305616.html', 'postid': '12305616', 'source': {}, 'userid': '-2'}