{'dateCreated': <DateTime '20200115T12:28:00' at 0x1a4f29e77c8>, 'description': '> os模块：os模块在python中包含普遍的操作系统功能，下面列出了一些在os模块中比较有用的部分。\n\n`os.sep` 可以取代操作系统特定的路径分隔符。windows下为 “\\\\”\n\n`os.name` 字符串指示你正在使用的平台。比如对于Windows，它是\'nt\'，而对于Linux/Unix用户，它是\'posix\'。\n\n`os.getcwd()` 函数得到当前工作目录，即当前Python脚本工作的目录路径。\n\n`os.getenv()` 获取一个环境变量，如果没有返回none\n\n`os.putenv(key, value)` 设置一个环境变量值\n\n`os.listdir(path)` 返回指定目录下的所有文件和目录名。\n\n`os.remove(path)` 函数用来删除一个文件。\n\n`os.system(command)` 函数用来运行shell命令。\n\n`os.linesep` 字符串给出当前平台使用的行终止符。例如，Windows使用\'\\r\\n\'，Linux使用\'\\n\'而Mac使用\'\\r\'。\n\n`os.curdir` :返回当前目录（\'.\')\n`os.chdir(dirname)` :改变工作目录到dirname\n\n---\n\n`os.getcwd()` 获取当前工作目录，即当前python脚本工作的目录路径\n\n`os.chdir("dirname")`  改变当前脚本工作目录；相当于shell下cd\n\n`os.curdir`  返回当前目录: (\'.\')\n\n`os.pardir`  获取当前目录的父目录字符串名：(\'..\')\n\n`os.makedirs(\'dirname1/dirname2\')`    可生成多层递归目录\n\n`os.removedirs(\'dirname1\')`    若目录为空，则删除，并递归到上一级目录，如若也为空，则删除，依此类推\n\n`os.mkdir(\'dirname\')`    生成单级目录；相当于shell中mkdir dirname\n\n`os.rmdir(\'dirname\')`    删除单级空目录，若目录不为空则无法删除，报错；相当于shell中rmdir dirname\n\n`os.listdir(\'dirname\')`    列出指定目录下的所有文件和子目录，包括隐藏文件，并以列表方式打印\n\n`os.remove()`  删除一个文件\n\n`os.rename("oldname","newname")`  重命名文件/目录\n\n`os.stat(\'path/filename\')`  获取文件/目录信息\n\n`os.sep`    输出操作系统特定的路径分隔符，win下为"\\\\",Linux下为"/"\n\n`os.linesep`    输出当前平台使用的行终止符，win下为"\\t\\n",Linux下为"\\n"\n\n`os.pathsep`    输出用于分割文件路径的字符串 win下为;,Linux下为:\n\n`os.name`    输出字符串指示当前使用平台。win->\'nt\'; Linux->\'posix\'\n\n`os.system("bash command")`  运行shell命令，直接显示\n\n`os.environ`  获取系统环境变量\n\n---\n\nos.path常用方法：\n\n`os.path.abspath(path)`  返回path规范化的绝对路径\n\n`os.path.split(path)`  将path分割成目录和文件名二元组返回\n\n`os.path.dirname(path)`  返回path的目录。其实就是os.path.split(path)的第一个元素\n\n`os.path.basename(path)`  返回path最后的文件名。如何path以／或\\结尾，那么就会返回空值。即os.path.split(path)的第二个元素\n\n`os.path.exists(path)`  如果path存在，返回True；如果path不存在，返回False\n\n`os.path.isabs(path)`  如果path是绝对路径，返回True\n\n`os.path.isfile(path)`  如果path是一个存在的文件，返回True。否则返回False\n\n`os.path.isdir(path)`  如果path是一个存在的目录，则返回True。否则返回False\n\n`os.path.join(path1[, path2[, ...]])`  将多个路径组合后返回，第一个绝对路径之前的参数将被忽略\n\n`os.path.getatime(path)`  返回path所指向的文件或者目录的最后存取时间\n\n`os.path.getmtime(path)`  返回path所指向的文件或者目录的最后修改时间\n\n`os.path.getsize(path)` 返回path的大小\n\n`os.path.normpath(os.path.join(os.path.abspath(__file__),\'..\',\'..\',\'..\'))` 表示返回当前文件的上上上层目录', 'title': 'Python os模块、os.path模块常用方法', 'categories': ['[随笔分类]Python~常用库'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12196034.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12196034.html', 'postid': '12196034', 'source': {}, 'userid': '-2'}