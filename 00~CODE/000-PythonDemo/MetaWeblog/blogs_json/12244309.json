{'dateCreated': <DateTime '20200130T23:06:00' at 0x1a4f299afc8>, 'description': '\n```c++\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace cv;\nusing namespace std;\n\nint main(int argc, char** argv)\n{\n    Mat canvas = Mat::zeros(Size(512, 512), CV_8UC3);\n\n    // 相关绘制的API\n    /* line 参数说明：\n        1. 在哪个图像上绘制\n        2. 起点\n        3. 终点\n        4. 颜色\n        5. 线宽\n        6. type：绘制模式,LINE_AA反锯齿，LINE_8就是8\n        7. 水平位移，默认0，一般用不到\n    */\n    line(canvas, Point(0, 0), Point(200, 200), Scalar(0,0,255), 5, LINE_8);\n    Rect rect(100, 100, 200, 200);\n    rectangle(canvas, rect, Scalar(255, 0, 0), 4, LINE_8);\n    circle(canvas, Point(256, 256), 100, Scalar(0, 255, 0), 1, 8);\n    RotatedRect rrt;\n    rrt.center = Point2f(256, 256);\n    rrt.angle = 45; // 这里是角度\n    rrt.size = Size(100, 200);\n    ellipse(canvas, rrt, Scalar(0, 255, 255), 1, 8);\n\n    //线宽如果为-1，则会变成填充模式\n\n    namedWindow("canvas", WINDOW_AUTOSIZE);\n    imshow("canvas", canvas);\n\n\n    // 绘制随机形状\n    Mat image = Mat::zeros(Size(512, 512), CV_8UC3);\n    int x1 = 0, y1 = 0;\n    int x2 = 0, y2 = 0;\n    RNG rng(12345);\n    while (true) {\n        x1 = (int)rng.uniform(0, 512);\n        x2 = (int)rng.uniform(0, 512);\n        y1 = (int)rng.uniform(0, 512);\n        y2 = (int)rng.uniform(0, 512);\n\n        int w = abs(x2 - x1);\n        int h = abs(y2 - y1);\n        rect.x = x1;\n        rect.y = y1;\n        rect.width = w;\n        rect.height = h;\n\n        image = Scalar(0, 0, 0);\n        Scalar color(rng.uniform(0, 256), rng.uniform(0, 256), rng.uniform(0, 256));\n\n        rectangle(image, rect, color, 1, 8);\n        //line(image, Point(x1, y1), Point(x2, y2), Scalar(rng.uniform(0, 256), rng.uniform(0, 256), rng.uniform(0, 256)), 1, 8);\n        imshow("image", image);\n        char c = waitKey(10);\n        if (c == 27) {\n            break;\n        }\n    }\n\n    waitKey(0);\n    destroyAllWindows();\n\n    return 0;\n}\n```', 'title': 'opencv：图形绘制与填充', 'categories': ['[随笔分类]OpenCV'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12244309.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12244309.html', 'postid': '12244309', 'source': {}, 'userid': '-2'}