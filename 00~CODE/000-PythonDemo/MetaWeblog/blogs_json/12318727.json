{'dateCreated': <DateTime '20200216T21:03:00' at 0x1a4f2579d48>, 'description': '转：https://www.cnblogs.com/soul-wonder/p/8920553.html\n\n![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200216210041756-959332044.png)\n\n @RequestParam 和 @PathVariable 注解是用于从request中接收请求的，两个都可以接收参数，关键点不同的是@RequestParam 是从request里面拿取值，而 @PathVariable 是从一个URI模板里面来填充\n\n## @RequestParam\n看下面一段代码：\n\nhttp://localhost:8080/springmvc/hello/101?param1=10&param2=20\n\n根据上面的这个URL，你可以用这样的方式来进行获取\n```java\npublic String getDetails(\n    @RequestParam(value="param1", required=true) String param1,\n        @RequestParam(value="param2", required=false) String param2){\n...\n}\n```\n\n@RequestParam 支持下面四种参数\n- defaultValue 如果本次请求没有携带这个参数，或者参数为空，那么就会启用默认值\n- name 绑定本次参数的名称，要跟URL上面的一样\n- required 这个参数是不是必须的\n- value 跟name一样的作用，是name属性的一个别名\n\n## @PathVariable\n这个注解能够识别URL里面的一个模板，我们看下面的一个URL\nhttp://localhost:8080/springmvc/hello/101?param1=10&param2=20\n上面的一个url你可以这样写：\n```java\n@RequestMapping("/hello/{id}")\n    public String getDetails(@PathVariable(value="id") String id,\n    @RequestParam(value="param1", required=true) String param1,\n    @RequestParam(value="param2", required=false) String param2){\n.......\n}\n```\n\n区别很明显了\n\n## @PathParam\n这个注解是和spring的pathVariable是一样的，也是基于模板的，但是这个是jboss包下面的一个实现，上面的是spring的一个实现，都要导包\n\n## @QueryParam\n@QueryParam 是 JAX-RS 本来就提供的，和Spring的RequestParam作用一致\n\n## @ResponseBody\nresponseBody表示服务器返回的时候以一种什么样的方式进行返回， 将内容或对象作为 HTTP 响应正文返回，值有很多，一般设定为json\n\n## @RequestBody\n一般是post请求的时候才会使用这个请求，把参数丢在requestbody里面', 'title': '@RequestParam，@PathParam，@PathVariable，@QueryParam注解的使用区别', 'categories': ['[随笔分类]Java~SpringMVC'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12318727.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12318727.html', 'postid': '12318727', 'source': {}, 'userid': '-2'}