{'dateCreated': <DateTime '20200128T23:39:00' at 0x1a4f29a6548>, 'description': '# 字符串与字符数组\n\n- C语言中没有字符串这种数据类型，可以通过char的数组来替代；\n- 字符串一定是一个char的数组，但char的数组未必是字符串；\n- 数字0(和字符‘\\0’等价)结尾的char数组就是一个字符串，但如果char数组没有以数字0结尾，那么就不是一个字符串，只是普通字符数组，所以字符串是一种特殊的char的数组。\n\n```c\n#include <stdio.h>\n\nint main()\n{\n\tchar c1[] = { \'c\', \' \', \'p\', \'r\', \'o\', \'g\' }; //普通字符数组\n\tprintf("c1 = %s\\n", c1); //乱码，因为没有’\\0’结束符\n\n\t//以‘\\0’(‘\\0’就是数字0)结尾的字符数组是字符串\n\tchar c2[] = { \'c\', \' \', \'p\', \'r\', \'o\', \'g\', \'\\0\'}; \n\tprintf("c2 = %s\\n", c2);\n\n\t//字符串处理以‘\\0’(数字0)作为结束符，后面的\'h\', \'l\', \'l\', \'e\', \'o\'不会输出\n\tchar c3[] = { \'c\', \' \', \'p\', \'r\', \'o\', \'g\', \'\\0\', \'h\', \'l\', \'l\', \'e\', \'o\', \'\\0\'};\n\tprintf("c3 = %s\\n", c3);\n\n\treturn 0;\n}\n```\n\n字符串的初始化：\n```c\n#include <stdio.h>\n\n// C语言没有字符串类型，通过字符数组模拟\n// C语言字符串，以字符‘\\0’, 数字0\nint main()\n{\n\t//不指定长度, 没有0结束符，有多少个元素就有多长\n\tchar buf[] = { \'a\', \'b\', \'c\' };\n\tprintf("buf = %s\\n", buf);\t//乱码\n\n\t//指定长度，后面没有赋值的元素，自动补0\n\tchar buf2[100] = { \'a\', \'b\', \'c\' };\n\tprintf("buf2 = %s\\n", buf2);\n\n\t//所有元素赋值为0\n\tchar buf3[100] = { 0 };\n\n\t//char buf4[2] = { \'1\', \'2\', \'3\' };//数组越界\n\n\tchar buf5[50] = { \'1\', \'a\', \'b\', \'0\', \'7\' };\n\tprintf("buf5 = %s\\n", buf5);\n\n\tchar buf6[50] = { \'1\', \'a\', \'b\', 0, \'7\' };\n\tprintf("buf6 = %s\\n", buf6);\n        char buf7[50] = { \'1\', \'a\', \'b\', \'\\0\', \'7\' };\n\tprintf("buf7 = %s\\n", buf7);\n\n\t//使用字符串初始化，编译器自动在后面补0，常用\n\tchar buf8[] = "agjdslgjlsdjg";\n\n\t//\'\\0\'后面最好不要连着数字，有可能几个数字连起来刚好是一个转义字符\n\t//\'\\ddd\'八进制字义字符，\'\\xdd\'十六进制转移字符\n\t// \\012相当于\\n\n\tchar str[] = "\\012abc";\n\tprintf("str == %s\\n", str);\n\n\treturn 0;\n}\n```\n\n使用scanf接收字符串：\n```c\n#include <stdio.h>\n\nint main()\n{\n\tchar str[100];\n   \n\tprintf("input string1 : \\n");\n\tscanf("%s", str);//scanf(“%s”,str)默认以空格分隔\n\tprintf("output:%s\\n", str);\n\n\treturn 0;\n}\n```', 'title': 'C：字符数组 与 字符串', 'categories': ['[随笔分类]C/C++~C语言'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12239373.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12239373.html', 'postid': '12239373', 'source': {}, 'userid': '-2'}