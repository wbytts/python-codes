{'dateCreated': <DateTime '20200215T21:04:00' at 0x1a4f2580808>, 'description': '图像的二值化分割，最重要的就是计算阈值\n\n阈值的计算方法很多，基本分为两类，全局阈值与自适应阈值\n\nOTSU、Triangle\n\n![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200215210321235-619915890.png)\n![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200215210329890-966017468.png)\n![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200215210343323-2143327643.png)\n![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200215210351666-2068078716.png)\n\n```c++\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace cv;\nusing namespace std;\n\n\nint main(int argc, char** argv)\n{\n    Mat src = imread("f:/images/shuang001.jpg");\n    if (src.empty())\n    {\n        printf("Could not find the image!\\n");\n        return -1;\n    }\n\n    namedWindow("input", WINDOW_AUTOSIZE);\n    imshow("input", src);\n\n    Mat gray, binary;\n    cvtColor(src, gray, COLOR_BGR2GRAY);\n    imshow("gray", gray);\n\n    // 均值分割\n    Scalar m = mean(gray);\n    printf("means: %.2f\\n", m[0]);\n    threshold(gray, binary, m[0], 255, THRESH_BINARY);\n    imshow("binary", binary);\n\n    // 直方图\n    threshold(gray, binary, 0, 255, THRESH_BINARY | THRESH_OTSU);\n    imshow("THRESH_OTSU", binary);\n\n    threshold(gray, binary, 0, 255, THRESH_BINARY | THRESH_TRIANGLE);\n    imshow("THRESH_TRIANGLE", binary);\n\n    waitKey(0);\n    destroyAllWindows();\n\n    return 0;\n}\n```', 'title': 'opencv：全局阈值', 'categories': ['[随笔分类]OpenCV'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12313675.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12313675.html', 'postid': '12313675', 'source': {}, 'userid': '-2'}