{'dateCreated': <DateTime '20200215T22:59:00' at 0x1a4f257bc88>, 'description': '![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200215224040887-311483422.png)\n![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200215224142953-50200950.png)\n![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200215224307167-424313047.png)\n![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200215224439970-122537384.png)\n![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200215224930232-749131359.png)\n\n```c++\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace cv;\nusing namespace std;\nRNG rng(12345);\n\nint main(int argc, char** argv)\n{\n    // Mat src = imread("f:/images/qq/20200215213837.png");\n    Mat src = imread("f:/images/qq/yezi.png");\n    if (src.empty())\n    {\n        printf("Could not find the image!\\n");\n        return -1;\n    }\n\n    namedWindow("input", WINDOW_AUTOSIZE);\n    imshow("input", src);\n\n    // 做一个高斯模糊，消除一些细微的东西\n    GaussianBlur(src, src, Size(3, 3), 0);\n    GaussianBlur(src, src, Size(3, 3), 0);\n\n    Mat gray, binary;\n    cvtColor(src, gray, COLOR_BGR2GRAY);\n    imshow("gray", gray);\n\n    // 二值化\n    threshold(gray, binary, 0, 255, THRESH_BINARY | THRESH_OTSU);\n    imshow("binary", binary);\n\n    vector<vector<Point>> contours;\n    vector<Vec4i> hierarchy;\n    //findContours(binary, contours, hierarchy, RETR_TREE, CHAIN_APPROX_SIMPLE, Point());\n    // 只绘制最外层的轮廓\n    findContours(binary, contours, hierarchy, RETR_EXTERNAL, CHAIN_APPROX_SIMPLE, Point());\n\n    // 一个一个绘制\n    for (size_t t = 0; t < contours.size(); t++) {\n        // 绘制第t个轮廓\n        drawContours(src, contours, t, Scalar(0, 0, 255), 2, 8);\n    }\n\n    // -1代表绘制所有\n    //drawContours(src, contours, -1, Scalar(0, 0, 255), 2, 8);\n    imshow("result", src);\n\n    waitKey(0);\n    destroyAllWindows();\n\n    return 0;\n}\n\n\n```', 'title': 'opencv：图像轮廓发现', 'categories': ['[随笔分类]OpenCV'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12315102.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12315102.html', 'postid': '12315102', 'source': {}, 'userid': '-2'}