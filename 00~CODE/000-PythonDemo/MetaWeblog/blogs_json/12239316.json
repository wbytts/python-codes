{'dateCreated': <DateTime '20200128T23:11:00' at 0x1a4f29a80c8>, 'description': '当超过一个数据类型能够存放最大的范围时，数值会溢出。\n\n有符号位最高位溢出的区别：符号位溢出会导致数的正负发生改变，但最高位的溢出会导致最高位丢失。\n\n```c\n#include <stdio.h>\n\nint main()\n{\n\tchar ch;\n\n\t//符号位溢出会导致数的正负发生改变\n\tch = 0x7f + 2; //127+2\n\tprintf("%d\\n", ch);\n\t//\t0111 1111\n\t//+2后 1000 0001，这是负数补码，其原码为 1111 1111，结果为-127\n\n\t//最高位的溢出会导致最高位丢失\n\tunsigned char ch2;\n\tch2 = 0xff+1; //255+1\n\tprintf("%u\\n", ch2);\n\t//\t  1111 1111\n\t//+1后 10000 0000， char只有8位最高位的溢出，结果为0000 0000，十进制为0\n\n\tch2 = 0xff + 2; //255+1\n\tprintf("%u\\n", ch2);\n\t//\t  1111 1111\n\t//+1后 10000 0001， char只有8位最高位的溢出，结果为0000 0001，十进制为1\n\n\treturn 0;\n}\n```', 'title': 'C：数值溢出问题', 'categories': ['[随笔分类]C/C++~C语言'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12239316.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12239316.html', 'postid': '12239316', 'source': {}, 'userid': '-2'}