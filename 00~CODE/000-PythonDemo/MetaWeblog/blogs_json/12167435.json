{'dateCreated': <DateTime '20200108T16:37:00' at 0x1a4f29f9ac8>, 'description': '<font style="font-size: 12pt;"></font><span>\n<div style="-en-clipboard: true;">\n<div><br></div>\n<div><font style="font-size: 12pt;">background-position 背景定位</font></div>\n<div><font style="font-size: 12pt;">如果，说浮动， 关键在一个 “浮” 字上面， 那么 我们的定位，关键在于一个 “位” \n上。</font></div>\n<div><font style="font-size: 12pt;">PS: \n定位是我们CSS算是数一数二难点的了，但是，你务必要学好它，我们CSS离不开定位，特别是后面的js特效，天天和定位打交道。不要抵触它，反而要爱上它，它可以让我们工作更加轻松哦！</font></div>\n<h2 style="margin: 19px 0px;"><font style="font-size: 18pt;">元素的定位属性</font></h2>\n<div><font style="font-size: 12pt;">元素的定位属性主要包括定位模式和边偏移两部分。</font></div>\n<div><font style="font-size: 12pt;">1、边偏移</font></div>\n<table width="678" style="outline: 0px; text-transform: none; text-indent: 0px; letter-spacing: normal; word-spacing: 0px; vertical-align: middle; border-spacing: 0px; orphans: 2; widows: 2; -webkit-text-stroke-width: 0px;">\n<colgroup>\n<col width="339">\n<col width="339"></colgroup>\n<tbody style="margin: 0px; padding: 0px; outline: 0px; border: 0px currentcolor; border-image: none; vertical-align: baseline;">\n<tr style="padding: 0px; outline: 0px; vertical-align: baseline; background-color: rgb(255, 255, 255);">\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">边偏移属性</font></span></div></td>\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">描述</font></span></div></td></tr>\n<tr style="padding: 0px; outline: 0px; vertical-align: baseline; background-color: rgb(249, 249, 249);">\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">top</font></span></div></td>\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">顶端偏移量，定义元素相对于其父元素上边线的距离</font></span></div></td></tr>\n<tr style="padding: 0px; outline: 0px; vertical-align: baseline; background-color: rgb(255, 255, 255);">\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">bottom</font></span></div></td>\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">底部偏移量，定义元素相对于其父元素下边线的距离</font></span></div></td></tr>\n<tr style="padding: 0px; outline: 0px; vertical-align: baseline; background-color: rgb(249, 249, 249);">\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">left</font></span></div></td>\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">左侧偏移量，定义元素相对于其父元素左边线的距离</font></span></div></td></tr>\n<tr style="padding: 0px; outline: 0px; vertical-align: baseline; background-color: rgb(255, 255, 255);">\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">right</font></span></div></td>\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">右侧偏移量，定义元素相对于其父元素右边线的距离</font></span></div></td></tr></tbody></table>\n<div><font style="font-size: 12pt;">也就说，以后定位要和这边偏移搭配使用了， 比如 top: 100px; left: \n30px; 等等</font></div>\n<div><font style="font-size: 12pt;">2、定位模式(定位的分类)</font></div>\n<div><font style="font-size: 12pt;">在CSS中，position属性用于定义元素的定位模式，其基本语法格式如下：</font></div>\n<div><font style="font-size: 12pt;">选择器{position:属性值;}</font></div>\n<div><font style="font-size: 12pt;">position属性的常用值</font></div>\n<table width="678" style="outline: 0px; text-transform: none; text-indent: 0px; letter-spacing: normal; word-spacing: 0px; vertical-align: middle; border-spacing: 0px; orphans: 2; widows: 2; -webkit-text-stroke-width: 0px;">\n<colgroup>\n<col width="339">\n<col width="339"></colgroup>\n<tbody style="margin: 0px; padding: 0px; outline: 0px; border: 0px currentcolor; border-image: none; vertical-align: baseline;">\n<tr style="padding: 0px; outline: 0px; vertical-align: baseline; background-color: rgb(255, 255, 255);">\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">值</font></span></div></td>\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">描述</font></span></div></td></tr>\n<tr style="padding: 0px; outline: 0px; vertical-align: baseline; background-color: rgb(249, 249, 249);">\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">static</font></span></div></td>\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">自动定位（默认定位方式）</font></span></div></td></tr>\n<tr style="padding: 0px; outline: 0px; vertical-align: baseline; background-color: rgb(255, 255, 255);">\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">relative</font></span></div></td>\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">相对定位，相对于其原文档流的位置进行定位</font></span></div></td></tr>\n<tr style="padding: 0px; outline: 0px; vertical-align: baseline; background-color: rgb(249, 249, 249);">\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">absolute</font></span></div></td>\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">绝对定位，相对于其上一个已经定位的父元素进行定位</font></span></div></td></tr>\n<tr style="padding: 0px; outline: 0px; vertical-align: baseline; background-color: rgb(255, 255, 255);">\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">fixed</font></span></div></td>\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">固定定位，相对于浏览器窗口进行定位</font></span></div></td></tr></tbody></table>\n<h2 style="margin: 19px 0px;"><font style="font-size: 18pt;">静态定位(static)</font></h2>\n<div><font style="font-size: 12pt;">静态定位是所有元素的默认定位方式，当position属性的取值为static时，可以将元素定位于静态位置。 \n所谓静态位置就是各个元素在HTML文档流中默认的位置。</font></div>\n<div><font style="font-size: 12pt;">上面的话翻译成白话： 就是网页中所有元素都默认的是静态定位哦！ \n其实就是标准流的特性。</font></div>\n<div><font style="font-size: 12pt;">在静态定位状态下，无法通过边偏移属性（top、bottom、left或right）来改变元素的位置。</font></div>\n<div><font style="font-size: 12pt;">PS： 静态定位其实没啥可说的。</font></div>\n<div><font style="font-size: 12pt;">静态定位唯一的用处： 就是 取消定位。 position: \nstatic;</font></div>\n<h2 style="margin: 19px 0px;"><font style="font-size: 18pt;">相对定位relative(自恋型)</font></h2>\n<div><font style="font-size: 12pt;">相对定位是将元素相对于它在标准流中的位置进行定位，当position属性的取值为relative时，可以将元素定位于相对位置。</font></div>\n<div><font style="font-size: 12pt;">对元素设置相对定位后，可以通过边偏移属性改变元素的位置，但是它在文档流中的位置仍然保留。如下图所示，即是一个相对定位的效果展示：</font></div>\n<div><a href="https://img2018.cnblogs.com/blog/1446249/202001/1446249-20200108163700333-1207298099.png"><img width="430" height="390" title="Image(1)[4]" style="margin: 0px; border: 0px currentcolor; border-image: none; display: inline; background-image: none;" alt="Image(1)[4]" src="https://img2018.cnblogs.com/blog/1446249/202001/1446249-20200108163700789-561704575.png" border="0"></a></div>\n<div><br></div>\n<div><font style="font-size: 12pt;">注意：</font></div>\n<ol style="list-style: decimal; margin: 0px 0px 14px; padding: 0px 0px 0px 28px; outline: 0px; border: 0px currentcolor; border-image: none; text-transform: none; text-indent: 0px; letter-spacing: normal; word-spacing: 0px; white-space: normal; orphans: 2; widows: 2; -webkit-text-stroke-width: 0px;">\n<li style="margin: 0px; padding: 0px; outline: 0px; border: 0px currentcolor; border-image: none; vertical-align: baseline; display: list-item;">\n<div><span><font style="font-size: 10.5pt;">相对定位最重要的一点是，它可以通过边偏移移动位置，但是原来的所占的位置，继续占有。</font></span></div></li>\n<li style="margin: 0px; padding: 0px; outline: 0px; border: 0px currentcolor; border-image: none; vertical-align: baseline; display: list-item;">\n<div><span><font style="font-size: 10.5pt;">其次，每次移动的位置，是以自己的左上角为基点移动（相对于自己来移动位置）</font></span></div></li></ol>\n<div><font style="font-size: 12pt;">就是说，相对定位的盒子仍在标准流中，它后面的盒子仍以标准流方式对待它。（相对定位不脱标）</font></div>\n<div><font style="font-size: 12pt;">如果说浮动的主要目的是 让多个块级元素一行显示，那么定位的主要价值就是 移动位置， \n让盒子到我们想要的位置上去。</font></div>\n<h2 style="margin: 19px 0px;"><font style="font-size: 18pt;">绝对定位absolute \n(拼爹型)</font></h2>\n<div><font style="font-size: 12pt;">[注意] \n如果文档可滚动，绝对定位元素会随着它滚动，因为元素最终会相对于正常流的某一部分定位。</font></div>\n<div><font style="font-size: 12pt;">当position属性的取值为absolute时，可以将元素的定位模式设置为绝对定位。</font></div>\n<div><font style="font-size: 12pt;">注意： \n绝对定位最重要的一点是，它可以通过边偏移移动位置，但是它完全脱标，完全不占位置。</font></div>\n<h3 style="margin: 18px 0px;"><font style="font-size: 14.1pt;">父级没有定位</font></h3>\n<div><font style="font-size: 12pt;">若所有父元素都没有定位，以浏览器当前屏幕为准对齐(document文档)。</font></div>\n<div><br></div>\n<div><a href="https://img2018.cnblogs.com/blog/1446249/202001/1446249-20200108163701474-787132511.png"><img width="685" height="368" title="Image(2)[4]" style="margin: 0px; border: 0px currentcolor; border-image: none; display: inline; background-image: none;" alt="Image(2)[4]" src="https://img2018.cnblogs.com/blog/1446249/202001/1446249-20200108163701829-274390460.png" border="0"></a></div>\n<div><br></div>\n<h3 style="margin: 18px 0px;"><font style="font-size: 14.1pt;">父级有定位</font></h3>\n<div><font style="font-size: 12pt;">绝对定位是将元素依据最近的已经定位（绝对、固定或相对定位）的父元素（祖先）进行定位。</font></div>\n<div><br></div>\n<div><a href="https://img2018.cnblogs.com/blog/1446249/202001/1446249-20200108163702108-1003206958.png"><img width="684" height="369" title="Image(3)[4]" style="margin: 0px; border: 0px currentcolor; border-image: none; display: inline; background-image: none;" alt="Image(3)[4]" src="https://img2018.cnblogs.com/blog/1446249/202001/1446249-20200108163702338-1151852599.png" border="0"></a></div>\n<div><br></div>\n<h3 style="margin: 18px 0px;"><font style="font-size: 14.1pt;">子绝父相</font></h3>\n<div><font style="font-size: 12pt;">这个“子绝父相”太重要了，是我们学习定位的口诀，时时刻刻记住的。</font></div>\n<div><font style="font-size: 12pt;">这句话的意思是 子级是绝对定位的话， 父级要用相对定位。</font></div>\n<div><font style="font-size: 12pt;">首先， 我们说下， \n绝对定位是将元素依据最近的已经定位绝对、固定或相对定位）的父元素（祖先）进行定位。</font></div>\n<div><font style="font-size: 12pt;">就是说， \n子级是绝对定位，父亲只要是定位即可（不管父亲是绝对定位还是相对定位，甚至是固定定位都可以），就是说， 子绝父绝，子绝父相都是正确的。</font></div>\n<div><font style="font-size: 12pt;">所以，我们可以得出如下结论：</font></div>\n<div><font style="font-size: 12pt;">因为子级是绝对定位，不会占有位置， \n可以放到父盒子里面的任何一个地方。</font></div>\n<div><font style="font-size: 12pt;">父盒子布局时，需要占有位置，因此父亲只能是 相对定位.</font></div>\n<div><font style="font-size: 12pt;">这就是子绝父相的由来。</font></div>\n<h2 style="margin: 19px 0px;"><font style="font-size: 18pt;">绝对定位的盒子水平/垂直居中</font></h2>\n<div><font style="font-size: 12pt;">普通的盒子是左右margin 改为 auto就可， \n但是对于绝对定位就无效了</font></div>\n<div><font style="font-size: 12pt;">定位的盒子也可以水平或者垂直居中，有一个算法。</font></div>\n<ol style="list-style: decimal; margin: 0px 0px 14px; padding: 0px 0px 0px 28px; outline: 0px; border: 0px currentcolor; border-image: none; text-transform: none; text-indent: 0px; letter-spacing: normal; word-spacing: 0px; white-space: normal; orphans: 2; widows: 2; -webkit-text-stroke-width: 0px;">\n<li style="margin: 0px; padding: 0px; outline: 0px; border: 0px currentcolor; border-image: none; vertical-align: baseline; display: list-item;">\n<div><span><font style="font-size: 10.5pt;">首先left 50% \n父盒子的一半大小</font></span></div></li>\n<li style="margin: 0px; padding: 0px; outline: 0px; border: 0px currentcolor; border-image: none; vertical-align: baseline; display: list-item;">\n<div><span><font style="font-size: 10.5pt;">然后走自己外边距负的一半值就可以了 \nmargin-left。</font></span></div></li></ol>\n<h2 style="margin: 19px 0px;"><font style="font-size: 18pt;">固定定位fixed(认死理型)</font></h2>\n<div><font style="font-size: 12pt;">固定定位是绝对定位的一种特殊形式，类似于 正方形是一个特殊的 \n矩形。它以浏览器窗口作为参照物来定义网页元素。当position属性的取值为fixed时，即可将元素的定位模式设置为固定定位。</font></div>\n<div><font style="font-size: 12pt;">当对元素设置固定定位后，它将脱离标准文档流的控制，始终依据浏览器窗口来定义自己的显示位置。不管浏览器滚动条如何滚动也不管浏览器窗口的大小如何变化，该元素都会始终显示在浏览器窗口的固定位置。</font></div>\n<div><font style="font-size: 12pt;">固定定位有两点：</font></div>\n<ol style="list-style: decimal; margin: 0px 0px 14px; padding: 0px 0px 0px 28px; outline: 0px; border: 0px currentcolor; border-image: none; text-transform: none; text-indent: 0px; letter-spacing: normal; word-spacing: 0px; white-space: normal; orphans: 2; widows: 2; -webkit-text-stroke-width: 0px;">\n<li style="margin: 0px; padding: 0px; outline: 0px; border: 0px currentcolor; border-image: none; vertical-align: baseline; display: list-item;">\n<div><span><font style="font-size: 10.5pt;">固定定位的元素跟父亲没有任何关系，只认浏览器。</font></span></div></li>\n<li style="margin: 0px; padding: 0px; outline: 0px; border: 0px currentcolor; border-image: none; vertical-align: baseline; display: list-item;">\n<div><span><font style="font-size: 10.5pt;">固定定位完全脱标，不占有位置，不随着滚动条滚动。</font></span></div></li></ol>\n<div><font style="font-size: 12pt;">记忆法： 就类似于孙猴子， \n无父无母，好不容易找到一个可靠的师傅（浏览器），就听的师傅的，别的都不听。</font></div>\n<h2 style="margin: 19px 0px;"><font style="font-size: 18pt;">叠放次序（z-index）</font></h2>\n<div><font style="font-size: 12pt;">当对多个元素同时设置定位时，定位元素之间有可能会发生重叠。</font></div>\n<div><br></div>\n<div><a href="https://img2018.cnblogs.com/blog/1446249/202001/1446249-20200108163702562-447631318.png"><img width="333" height="244" title="Image(4)[4]" style="border: 0px currentcolor; border-image: none; display: inline; background-image: none;" alt="Image(4)[4]" src="https://img2018.cnblogs.com/blog/1446249/202001/1446249-20200108163702735-1145276351.png" border="0"></a></div>\n<div><br></div>\n<div><br></div>\n<div><font style="font-size: 12pt;">在CSS中，要想调整重叠定位元素的堆叠顺序，可以对定位元素应用z-index层叠等级属性，其取值可为正整数、负整数和0。</font></div>\n<div><font style="font-size: 12pt;">比如： z-index: 2; font-weight: \n700</font></div>\n<div><font style="font-size: 12pt;">注意：</font></div>\n<ol style="list-style: decimal; margin: 0px 0px 14px; padding: 0px 0px 0px 28px; outline: 0px; border: 0px currentcolor; border-image: none; text-transform: none; text-indent: 0px; letter-spacing: normal; word-spacing: 0px; white-space: normal; orphans: 2; widows: 2; -webkit-text-stroke-width: 0px;">\n<li style="margin: 0px; padding: 0px; outline: 0px; border: 0px currentcolor; border-image: none; vertical-align: baseline; display: list-item;">\n<div><span><font style="font-size: 10.5pt;">z-index的默认属性值是0，取值越大，定位元素在层叠元素中越居上。</font></span></div></li>\n<li style="margin: 0px; padding: 0px; outline: 0px; border: 0px currentcolor; border-image: none; vertical-align: baseline; display: list-item;">\n<div><span><font style="font-size: 10.5pt;">如果取值相同，则根据书写顺序，后来居上。</font></span></div></li>\n<li style="margin: 0px; padding: 0px; outline: 0px; border: 0px currentcolor; border-image: none; vertical-align: baseline; display: list-item;">\n<div><span><font style="font-size: 10.5pt;">后面数字一定不能加单位。</font></span></div></li>\n<li style="margin: 0px; padding: 0px; outline: 0px; border: 0px currentcolor; border-image: none; vertical-align: baseline; display: list-item;">\n<div><span><font style="font-size: 10.5pt;">只有相对定位，绝对定位，固定定位有此属性，其余标准流，浮动，静态定位都无此属性，亦不可指定此属性。</font></span></div></li></ol>\n<h1 style="margin: 21px 0px;"><font style="font-size: 24pt;">四种定位总结</font></h1>\n<table width="680" style="outline: 0px; text-transform: none; text-indent: 0px; letter-spacing: normal; word-spacing: 0px; vertical-align: middle; border-spacing: 0px; orphans: 2; widows: 2; -webkit-text-stroke-width: 0px;">\n<colgroup>\n<col width="170">\n<col width="170">\n<col width="170">\n<col width="170"></colgroup>\n<tbody style="margin: 0px; padding: 0px; outline: 0px; border: 0px currentcolor; border-image: none; vertical-align: baseline;">\n<tr style="padding: 0px; outline: 0px; vertical-align: baseline; background-color: rgb(255, 255, 255);">\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">定位模式</font></span></div></td>\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">是否脱标占有位置</font></span></div></td>\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">是否可以使用边偏移</font></span></div></td>\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">移动位置基准</font></span></div></td></tr>\n<tr style="padding: 0px; outline: 0px; vertical-align: baseline; background-color: rgb(249, 249, 249);">\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">静态static</font></span></div></td>\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">不脱标，正常模式</font></span></div></td>\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">不可以</font></span></div></td>\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">正常模式</font></span></div></td></tr>\n<tr style="padding: 0px; outline: 0px; vertical-align: baseline; background-color: rgb(255, 255, 255);">\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">相对定位relative</font></span></div></td>\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">脱标，占有位置</font></span></div></td>\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">可以</font></span></div></td>\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">相对自身位置移动（自恋型）</font></span></div></td></tr>\n<tr style="padding: 0px; outline: 0px; vertical-align: baseline; background-color: rgb(249, 249, 249);">\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">绝对定位absolute</font></span></div></td>\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">完全脱标，不占有位置</font></span></div></td>\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">可以</font></span></div></td>\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">相对于定位父级移动位置（拼爹型）</font></span></div></td></tr>\n<tr style="padding: 0px; outline: 0px; vertical-align: baseline; background-color: rgb(255, 255, 255);">\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">固定定位fixed</font></span></div></td>\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">完全脱标，不占有位置</font></span></div></td>\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">可以</font></span></div></td>\n<td align="left" style="outline: 0px; border: 1px solid rgb(208, 208, 208); border-image: none; vertical-align: middle;">\n<div><span><font style="font-size: 10.5pt;">相对于浏览器移动位置（认死理型）</font></span></div></td></tr></tbody></table>\n<h1 style="margin: 21px 0px;"><font style="font-size: 24pt;">定位模式转换</font></h1>\n<div><font style="font-size: 12pt;">跟 浮动一样， 元素添加了 绝对定位和固定定位之后， 元素模式也会发生转换， 都转换为 \n行内块模式，</font></div>\n<div><font style="font-size: 12pt;">行内块 的宽度和高度 跟内容有关系</font></div>\n<div><font style="font-size: 12pt;">** 因此 比如 行内元素 如果添加了 绝对定位或者 固定定位后 \n浮动后，可以不用转换模式，直接给高度和宽度就可以了。**</font></div></div>\n<div><br></div></span><font style="font-size: 12pt;"> </font>', 'title': 'CSS：定位概述', 'categories': ['[随笔分类]FrontEnd~CSS'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12167435.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12167435.html', 'postid': '12167435', 'source': {}, 'userid': '-2'}