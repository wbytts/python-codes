{'dateCreated': <DateTime '20200127T22:56:00' at 0x1a4f29aea88>, 'description': '提取ROI区域，处理然后放回去：\n![](https://img2018.cnblogs.com/blog/1446249/202001/1446249-20200127224159506-1908311584.png)\n\n# 泛洪填充\n测试代码：显示一张图像，鼠标点击之后，会从该点开始进行填充，显示填充后的结果图像\n注：二值图像的填充需要使用选项：`cv2.FLOODFILL_MASK_ONLY`\n\n选项说明：\n- `cv2.FLOODFILL_FIXED_RANGE`：改变图像，泛洪填充\n- `cv2.FLOODFILL_MASK_ONLY`：不改变图像，只填充遮罩层本身，忽略新的颜色值参数\n\n```python\nimport cv2\nimport numpy as np\n\n# 读取一张图片\nsrc = cv2.imread("../images/CrystalLiu2.jpg")\n# 命名一个窗口\ncv2.namedWindow("input image", cv2.WINDOW_AUTOSIZE)\n\ndef fill_color_demo(image, x, y):\n    copyImg = image.copy()\n    h, w = image.shape[:2]\n    mask = np.zeros([h+2, w+2], np.uint8)\n    cv2.floodFill(copyImg, mask, (x, y), (0, 255, 255), (100, 100, 100), (50, 50, 50), cv2.FLOODFILL_FIXED_RANGE)\n    cv2.imshow("fill", copyImg)\n    cv2.setMouseCallback(\'fill\', draw_circle)\n\ndef draw_circle(event, x, y, flags, param):\n    if event == cv2.EVENT_LBUTTONDOWN:\n        fill_color_demo(src, x, y)\n\n\n\n# 显示一张图片\ncv2.imshow("input image", src)\ncv2.setMouseCallback(\'input image\', draw_circle)\n\n# 等待键盘按键\ncv2.waitKey(0)\n# 销毁所有窗口\ncv2.destroyAllWindows()\n```\n', 'title': 'opencv python：ROI 与 泛洪填充', 'categories': ['[随笔分类]OpenCV~Python', '[随笔分类]OpenCV'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12237158.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12237158.html', 'postid': '12237158', 'source': {}, 'userid': '-2'}