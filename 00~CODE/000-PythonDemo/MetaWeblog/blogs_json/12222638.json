{'dateCreated': <DateTime '20200121T17:49:00' at 0x1a4f29ce9c8>, 'description': '# time 模块\n\n提供了处理时间和表示之间转换的功能\n\n## 获取当前时间戳\n\n时间戳：从0时区的1970年1月1日0时0分0秒，到所给定日期时间的时间，浮点秒数，或者毫秒整数\n\n获取方式：\n```python\nimport time\ntime.time()\n```\n\n## 获取时间元组\n\n很多python时间函数将时间处理为9个数字的元组\n\n![](https://img2018.cnblogs.com/blog/1446249/202001/1446249-20200121172331706-1710471521.png)\n\n```python\nimport time\ntime.localtime([seconds]) # seconds 可以自己指定时间戳，不写则默认是当前时间戳\n```\n\n## 获取格式化的事件\n\n### 秒 -- 可读时间\n\n```python\nimport time\ntime.ctime([seconds])\n```\n\n### 时间元组 -- 可读时间\n\n```python\nimport time\ntime.asctime([p_tuple])\n```\n\n### 自定义格式化时间\n\n`time.strftime(格式字符串, 时间元组)`\n\n常用格式符：\n- `%y`：两位数的年份表示（00-99）\n- `%Y`：四位数的年份表示（000-9999）\n- `%m`：月份（01-12）\n- `%d`：月中的一天（0-31）\n- `%H`：24小时制小时数（0-23）\n- `%I`：12小时小时数（01-12）\n- `%M`：分钟数（00-59）\n- `%S`：秒（00-59）\n- `%a`：本地简化星期名称\n- `%A`：本地完整星期名称\n- `%b`：本地简化的月份名称\n- `%B`：本地完整的月份名称\n- `%c`：本地响应的日期表示和时间表示\n- `%j`：年内的一天（0-366）\n- `%p`：本地A.M或P.M的等价符\n- `%U`：一年中的星期数（00-53），星期天为星期的开始\n- `%w`：星期（0-6），星期天为星期的开始\n-  。。。。。。\n\n## 获取当前CPU时间\n\n`time.clock()`\n\n## 休眠n秒\n\n`time.sleep(n)`：推迟线程的执行，可以简单理解为让程序暂停\n\n# calendar 模块\n\n提供日历相关的功能\n\n获取某月日历：\n```python\nimport calendar\ncalendar.month(2017,9)\n```\n![](https://img2018.cnblogs.com/blog/1446249/202001/1446249-20200121174159592-621573281.png)\n\n# datetime 模块\n\npython处理日期和时间的标准库\n\n## 获取当天日期\n\n```python\nimport datetime\nprint(datetime.datetime.now())\nprint(datetime.datetime.today())\n```\n\n## 单独获取当前的年月日时分秒\n\n```python\nimport datetime\nt = datetime.datetime.now()\n\nt.year\nt.month\nt.day\n......\n```\n\n## 计算n天之后的日期\n\n```python\nimport datetime\n\nt = datetime.datetime.today()\n\nt + datetime.timedelta(days=7) # 计算7天之后的日期时间\n```\n\n## 获取两个日期的时间差\n\n![](https://img2018.cnblogs.com/blog/1446249/202001/1446249-20200121174829474-496158718.png)\n\n\n更多的查看文档。。。', 'title': 'Python：时间日历基本处理', 'categories': ['[随笔分类]Python~语法'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12222638.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12222638.html', 'postid': '12222638', 'source': {}, 'userid': '-2'}