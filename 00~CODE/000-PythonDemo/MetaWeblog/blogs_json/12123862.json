{'dateCreated': <DateTime '20191231T12:49:00' at 0x1a4f2a14048>, 'description': '# Python中注释的写法\n\n`#`：使用井号进行单行注释\n\nPython中貌似没有提供多行注释，不过我们可以利用三引号的多行字符串来进行多行注释\n\n```\n"""\n多行注释内容\n多行注释内容\n......\n"""\n\n或者\n\n\'\'\'\n多行注释内容\n多行注释内容\n......\n\'\'\'\n```\n\n# 文档字符串\n\n在定义函数或类的时候，在缩进之后的第一行使用三引号注释，就是文档字符串\n\n可以使用 `__doc__` 在之后查看这段字符串\n\n```python\ndef a():\n    \'\'\'这是文档字符串\'\'\'\n    pass\nprint(a.__doc__)\n```\n\n# `#!` 指定解释器\n\n```\n#! /usr/bin/env python3\n```\n\n# 指定编码\n\n带等于号的\n```\n# coding=<encoding name>\n```\n\n最常见的，带冒号的（大多数编辑器都可以正确识别的）\n```\n#!/usr/bin/python\n# -*- coding: <encoding name> -*-\n```\n\nvim的：\n```\n#!/usr/bin/python\n# vim: set fileencoding=<encoding name> :\n```\n\n精确表达：\n```\n更加精确的解释是：\n\n\xa0 \xa0 符合正则表达式："^[ \\t\\v]*#.*?coding[:=][ \\t]*([-_.a-zA-Z0-9]+)" 就可以;\n\n   关于正则表达式的理解：\n\n   1."^"表示开始；\n\n   2."[ \\t\\v]"表示匹配制表符\\t和垂直制表符\\v，*表示匹配0次或者多次,则[ \\t\\v]*合起来理解就是匹配0次或者多次\\t\\v;\n\n   3."#"匹配#字符，即对应标题的#字符；\n\n   4.".*"表示接下来匹配任意字符,".*?"表示以非贪心算法匹配任意字符，对应标题中的“\xa0-*-\xa0”；\n\n   5."coding"对应标题中的coding；\n\n   6."[:=]"表示接下来的字符是":"或者"="出现的任意多个字符，对应标题中的":";\n\n   7.[ \\t]*表示接下来匹配0次或者多次\\t；标题中表示使用了0次；\n\n   8.[-_.a-zA-Z0-9]表示匹配出现\'_\'字符、小写字母\'a至z\'、大小字母\'A至Z\'、数字‘0至9’的任意多的字符，对应标题中的utf-8\n\n   9.接下来标题中的"\xa0-*-\xa0"则这个官方表达式没有给出解释，因此这个正则表达式应该是不完整的，我觉得完整的正则表达式可以为：\n\n     "^[ \\t\\v]*#.*?coding[:=][ \\t]*([-_.a-zA-Z0-9]+).*$"\n```', 'title': 'Python中注释与声明', 'categories': ['[随笔分类]Python~'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12123862.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12123862.html', 'postid': '12123862', 'source': {}, 'userid': '-2'}