{'dateCreated': <DateTime '20200122T16:21:00' at 0x1a4f29ce248>, 'description': '# 文件介绍\n\n文件是数据存放的容器\n\n文件的作用：持久性的存储数据内容\n\n文件组成：\n\n- 文件名\n- 拓展名（有时候没有使用）\n  - 一般不同的扩展名，对应着不同的存储格式\n- 文件内容\n  - 文本文件\n  - 二进制文件\n\n# 打开文件\n\n打开：`open(文件, 模式)`\n\n- 文件：指定文件路径\n- 模式：控制操作模式\n\n返回一个文件对象\n\n# 关闭文件\n\n`f.close()`：可以释放相关的系统资源，会立即清空缓冲区的数据内容到磁盘文件\n\n`f.flush()`：立即刷新缓冲区的数据内容到磁盘文件\n\n# 操作模式\n\n- r\n  - 以制度方式打开文件，这是默认模式\n  - 文件指针将会放在文件的开头\n  - 注意：文件不存在，会报错\n- w\n  - 以只写方式打开文件\n  - 文件的指针将会放在文件的开头，所以写入新内容会覆盖\n  - 注意：文件不存在，会自动创建一个新文件\n- a\n  - 以追加方式（只写）打开文件\n  - 文件的指针将会放在文件结尾\n  - 注意：文件不存在，会自动创建一个新文件\n- 增加 b\n  - 以二进制格式进行文件读写\n- 增加 +\n  - 代表都是以读写模式进行打开\n  - r+与w，写的区别\n\n# 文件定位\n\n`f.seek(偏移量, 0或1或2)`\n\n- 0：开头，默认\n- 1：当前位置\n- 2：文件末尾\n- 注意：文本文件的操作模式下，只能使用0\n\n`f.tell()`：查看当前文件指针所在的位置\n\n# 读取内容\n\n- `f.read(字节数)`：按字节进行读取，默认读取整个文件\n- `f.readline([limit])`：按行进行读取\n- `f.readlines()`：读取所有行\n- `for in`：文件对象可以直接遍历，一行一行\n- 判断是否可读：`f.readable()`\n- 注意：\n  - 一般文件特别大的时候，可以使用readline方法\n    - 按行加载，可节省内存\n    - 相比其他两个读取方法，性能高\n  - 其他两个方法，一次性读取所有文件内容\n    - 虽然占用内存，但处理性能比较高\n\n# 写入内容\n\n- `f.write(x)`：写入内容，返回成功写入的长度\n- `f.writable()`：判断文件是否可以写入', 'title': 'Python：文件操作', 'categories': ['[随笔分类]Python~语法'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12228841.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12228841.html', 'postid': '12228841', 'source': {}, 'userid': '-2'}