{'dateCreated': <DateTime '20200401T03:54:00' at 0x1a4f2528f48>, 'description': 'https://blog.csdn.net/zhuzhezhuzhe1/article/details/80560306\n\n```\n#############################################################\n#\t\t\t\t\t\tmvc\n#############################################################\nspring.mvc.async.request-timeout=设定async请求的超时时间，以毫秒为单位，如果没有设置的话，以具体实现的超时时间为准，比如tomcat的servlet3的话是10秒.\nspring.mvc.date-format=设定日期的格式，比如dd/MM/yyyy.\nspring.mvc.favicon.enabled=是否支持favicon.ico，默认为:=true\nspring.mvc.ignore-default-model-on-redirect=在重定向时是否忽略默认model的内容，默认为true\nspring.mvc.locale=指定使用的Locale.\nspring.mvc.message-codes-resolver-format=指定message=codes的格式化策略(PREFIX_ERROR_CODE,POSTFIX_ERROR_CODE).\nspring.mvc.view.prefix=指定mvc视图的前缀.\nspring.mvc.view.suffix=指定mvc视图的后缀.\n#############################################################\n#\t\t\t\t\t\tmessages\n#############################################################\nspring.messages.basename=指定message的basename，多个以逗号分隔，如果不加包名的话，默认从classpath路径开始，默认:=messages\nspring.messages.cache-seconds=设定加载的资源文件缓存失效时间，-1的话为永不过期，默认为-1\nspring.messages.encoding=设定Message=bundles的编码，默认:=UTF-8\n#############################################################\n#\t\t\t\t\t\tmobile\n#############################################################\nspring.mobile.devicedelegatingviewresolver.enable-fallback=是否支持fallback的解决方案，默认false\nspring.mobile.devicedelegatingviewresolver.enabled=是否开始device=view=resolver，默认为:=false\nspring.mobile.devicedelegatingviewresolver.mobile-prefix=设定mobile端视图的前缀，默认为:mobile/\nspring.mobile.devicedelegatingviewresolver.mobile-suffix=设定mobile视图的后缀\nspring.mobile.devicedelegatingviewresolver.normal-prefix=设定普通设备的视图前缀\nspring.mobile.devicedelegatingviewresolver.normal-suffix=设定普通设备视图的后缀\nspring.mobile.devicedelegatingviewresolver.tablet-prefix=设定平板设备视图前缀，默认:tablet/\nspring.mobile.devicedelegatingviewresolver.tablet-suffix=设定平板设备视图后缀.\nspring.mobile.sitepreference.enabled=是否启用SitePreferenceHandler，默认为: true\n#############################################################\n#\t\t\t\t\t\tview\n#############################################################\nspring.view.prefix=设定mvc视图的前缀.\nspring.view.suffix=设定mvc视图的后缀.\n#############################################################\n#\t\t\t\t\t\tresource\n#############################################################\nspring.resources.add-mappings=是否开启默认的资源处理，默认为true\nspring.resources.cache-period=设定资源的缓存时效，以秒为单位.\nspring.resources.chain.cache=是否开启缓存，默认为:=true\nspring.resources.chain.enabled=是否开启资源=handling=chain，默认为false\nspring.resources.chain.html-application-cache=是否开启h5应用的cache=manifest重写，默认为:=false\nspring.resources.chain.strategy.content.enabled=是否开启内容版本策略，默认为false\nspring.resources.chain.strategy.content.paths=指定要应用的版本的路径，多个以逗号分隔，默认为:[/**]\nspring.resources.chain.strategy.fixed.enabled=是否开启固定的版本策略，默认为false\nspring.resources.chain.strategy.fixed.paths=指定要应用版本策略的路径，多个以逗号分隔\nspring.resources.chain.strategy.fixed.version=指定版本策略使用的版本号\nspring.resources.static-locations=指定静态资源路径，默认为classpath:[/META-INF/resources/,/resources/, /static/, /public/]以及context:/\n#############################################################\n#\t\t\t\t\t\tmultipart\n#############################################################\nmultipart.enabled=是否开启文件上传支持，默认为true\nmultipart.file-size-threshold=设定文件写入磁盘的阈值，单位为MB或KB，默认为0\nmultipart.location=指定文件上传路径.\nmultipart.max-file-size=指定文件大小最大值，默认1MB\nmultipart.max-request-size=指定每次请求的最大值，默认为10MB\n#############################################################\n#\t\t\t\t\t\tfreemarker\n#############################################################\nspring.freemarker.allow-request-override=指定HttpServletRequest的属性是否可以覆盖controller的model的同名项\nspring.freemarker.allow-session-override=指定HttpSession的属性是否可以覆盖controller的model的同名项\nspring.freemarker.cache=是否开启template caching.\nspring.freemarker.charset=设定Template的编码.\nspring.freemarker.check-template-location=是否检查templates路径是否存在.\nspring.freemarker.content-type=设定Content-Type.\nspring.freemarker.enabled=是否允许mvc使用freemarker.\nspring.freemarker.expose-request-attributes=设定所有request的属性在merge到模板的时候，是否要都添加到model中.\nspring.freemarker.expose-session-attributes=设定所有HttpSession的属性在merge到模板的时候，是否要都添加到model中.\nspring.freemarker.expose-spring-macro-helpers=设定是否以springMacroRequestContext的形式暴露RequestContext给Spring’s macro library使用\nspring.freemarker.prefer-file-system-access=是否优先从文件系统加载template，以支持热加载，默认为true\nspring.freemarker.prefix=设定freemarker模板的前缀.\nspring.freemarker.request-context-attribute=指定RequestContext属性的名.\nspring.freemarker.settings=设定FreeMarker keys.\nspring.freemarker.suffix=设定模板的后缀.\nspring.freemarker.template-loader-path=设定模板的加载路径，多个以逗号分隔，默认: [“classpath:/templates/”]\nspring.freemarker.view-names=指定使用模板的视图列表.\n#############################################################\n#\t\t\t\t\t\tvelocity\n#############################################################\nspring.velocity.allow-request-override=指定HttpServletRequest的属性是否可以覆盖controller的model的同名项\nspring.velocity.allow-session-override=指定HttpSession的属性是否可以覆盖controller的model的同名项\nspring.velocity.cache=是否开启模板缓存\nspring.velocity.charset=设定模板编码\nspring.velocity.check-template-location=是否检查模板路径是否存在.\nspring.velocity.content-type=设定ContentType的值\nspring.velocity.date-tool-attribute=设定暴露给velocity上下文使用的DateTool的名\nspring.velocity.enabled=设定是否允许mvc使用velocity\nspring.velocity.expose-request-attributes=是否在merge模板的时候，将request属性都添加到model中\nspring.velocity.expose-session-attributes=是否在merge模板的时候，将HttpSession属性都添加到model中\nspring.velocity.expose-spring-macro-helpers=设定是否以springMacroRequestContext的名来暴露RequestContext给Spring’s macro类库使用\nspring.velocity.number-tool-attribute=设定暴露给velocity上下文的NumberTool的名\nspring.velocity.prefer-file-system-access=是否优先从文件系统加载模板以支持热加载，默认为true\nspring.velocity.prefix=设定velocity模板的前缀.\nspring.velocity.properties=设置velocity的额外属性.\nspring.velocity.request-context-attribute=设定RequestContext attribute的名.\nspring.velocity.resource-loader-path=设定模板路径，默认为: classpath:/templates/\nspring.velocity.suffix=设定velocity模板的后缀.\nspring.velocity.toolbox-config-location=设定Velocity Toolbox配置文件的路径，比如 /WEB-INF/toolbox.xml.\nspring.velocity.view-names=设定需要解析的视图名称.\n#############################################################\n#\t\t\t\t\t\tthymeleaf\n#############################################################\nspring.thymeleaf.cache=是否开启模板缓存，默认true\nspring.thymeleaf.check-template-location=是否检查模板路径是否存在，默认true\nspring.thymeleaf.content-type=指定Content-Type，默认为: text/html\nspring.thymeleaf.enabled=是否允许MVC使用Thymeleaf，默认为: true\nspring.thymeleaf.encoding=指定模板的编码，默认为: UTF-8\nspring.thymeleaf.excluded-view-names=指定不使用模板的视图名称，多个以逗号分隔.\nspring.thymeleaf.mode 指定模板的模式，具体查看StandardTemplateModeHandlers，默认为: HTML5\nspring.thymeleaf.prefix=指定模板的前缀，默认为:classpath:/templates/\nspring.thymeleaf.suffix 指定模板的后缀，默认为:.html\nspring.thymeleaf.template-resolver-order=指定模板的解析顺序，默认为第一个.\nspring.thymeleaf.view-names=指定使用模板的视图名，多个以逗号分隔.\n#############################################################\n#\t\t\t\t\t\tmustcache\n#############################################################\nspring.mustache.cache=是否Enable template caching.\nspring.mustache.charset=指定Template的编码.\nspring.mustache.check-template-location=是否检查默认的路径是否存在.\nspring.mustache.content-type=指定Content-Type.\nspring.mustache.enabled=是否开启mustcache的模板支持.\nspring.mustache.prefix=指定模板的前缀，默认: classpath:/templates/\nspring.mustache.suffix=指定模板的后缀，默认: .html\nspring.mustache.view-names=指定要使用模板的视图名.\n#############################################################\n#\t\t\t\t\t\tgroovy模板\n#############################################################\nspring.groovy.template.allow-request-override=指定HttpServletRequest的属性是否可以覆盖controller的model的同名项\nspring.groovy.template.allow-session-override=指定HttpSession的属性是否可以覆盖controller的model的同名项\nspring.groovy.template.cache=是否开启模板缓存.\nspring.groovy.template.charset=指定Template编码.\nspring.groovy.template.check-template-location=是否检查模板的路径是否存在.\nspring.groovy.template.configuration.auto-escape=是否在渲染模板时自动排查model的变量，默认为: false\nspring.groovy.template.configuration.auto-indent=是否在渲染模板时自动缩进，默认为false\nspring.groovy.template.configuration.auto-indent-string=如果自动缩进启用的话，是使用SPACES还是TAB，默认为: SPACES\nspring.groovy.template.configuration.auto-new-line=渲染模板时是否要输出换行，默认为false\nspring.groovy.template.configuration.base-template-class=指定template base class.\nspring.groovy.template.configuration.cache-templates=是否要缓存模板，默认为true\nspring.groovy.template.configuration.declaration-encoding=在写入declaration header时使用的编码\nspring.groovy.template.configuration.expand-empty-elements=是使用这种形式，还是这种展开模式，默认为: false)\nspring.groovy.template.configuration.locale=指定template locale.\nspring.groovy.template.configuration.new-line-string=当启用自动换行时，换行的输出，默认为系统的line.separator属性的值\nspring.groovy.template.configuration.resource-loader-path=指定groovy的模板路径，默认为classpath:/templates/\nspring.groovy.template.configuration.use-double-quotes=指定属性要使用双引号还是单引号，默认为false\nspring.groovy.template.content-type=指定Content-Type.\nspring.groovy.template.enabled=是否开启groovy模板的支持.\nspring.groovy.template.expose-request-attributes=设定所有request的属性在merge到模板的时候，是否要都添加到model中.\nspring.groovy.template.expose-session-attributes=设定所有request的属性在merge到模板的时候，是否要都添加到model中.\nspring.groovy.template.expose-spring-macro-helpers=设定是否以springMacroRequestContext的形式暴露RequestContext给Spring’s macro library使用\nspring.groovy.template.prefix=指定模板的前缀.\nspring.groovy.template.request-context-attribute=指定RequestContext属性的名.\nspring.groovy.template.resource-loader-path=指定模板的路径，默认为: classpath:/templates/\nspring.groovy.template.suffix=指定模板的后缀\nspring.groovy.template.view-names=指定要使用模板的视图名称.\n#############################################################\n#\t\t\t\t\t\thttp\n#############################################################\nspring.hateoas.apply-to-primary-object-mapper=设定是否对object mapper也支持HATEOAS，默认为: true\nspring.http.converters.preferred-json-mapper=是否优先使用JSON mapper来转换.\nspring.http.encoding.charset=指定http请求和相应的Charset，默认: UTF-8\nspring.http.encoding.enabled=是否开启http的编码支持，默认为true\nspring.http.encoding.force=是否强制对http请求和响应进行编码，默认为true\n#############################################################\n#\t\t\t\t\t\tjson\n#############################################################\nspring.jackson.date-format=指定日期格式，比如yyyy-MM-dd HH:mm:ss，或者具体的格式化类的全限定名\nspring.jackson.deserialization=是否开启Jackson的反序列化\nspring.jackson.generator=是否开启json的generators.\nspring.jackson.joda-date-time-format=指定Joda date/time的格式，比如yyyy-MM-dd HH:mm:ss). 如果没有配置的话，dateformat会作为backup\nspring.jackson.locale=指定json使用的Locale.\nspring.jackson.mapper=是否开启Jackson通用的特性.\nspring.jackson.parser=是否开启jackson的parser特性.\nspring.jackson.property-naming-strategy=指定PropertyNamingStrategy (CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES)或者指定PropertyNamingStrategy子类的全限定类名.\nspring.jackson.serialization=是否开启jackson的序列化.\nspring.jackson.serialization-inclusion=指定序列化时属性的inclusion方式，具体查看JsonInclude.Include枚举.\nspring.jackson.time-zone=指定日期格式化时区，比如America/Los_Angeles或者GMT+10.\n#############################################################\n#\t\t\t\t\t\tjersey\n#############################################################\nspring.jersey.filter.order=指定Jersey filter的order，默认为: 0\nspring.jersey.init=指定传递给Jersey的初始化参数.\nspring.jersey.type=指定Jersey的集成类型，可以是servlet或者filter.server配置\nserver.address=指定server绑定的地址\nserver.compression.enabled=是否开启压缩，默认为false.\nserver.compression.excluded-user-agents=指定不压缩的user-agent，多个以逗号分隔，默认值为:text/html,text/xml,text/plain,text/css\nserver.compression.mime-types=指定要压缩的MIME type，多个以逗号分隔.\nserver.compression.min-response-size=执行压缩的阈值，默认为2048\nserver.context-parameters.[param name]=设置servlet context 参数\nserver.context-path=设定应用的context-path.\nserver.display-name=设定应用的展示名称，默认: application\nserver.jsp-servlet.class-name=设定编译JSP用的servlet，默认: org.apache.jasper.servlet.JspServlet)\nserver.jsp-servlet.init-parameters.[param name]=设置JSP servlet 初始化参数.\nserver.jsp-servlet.registered=设定JSP servlet是否注册到内嵌的servlet容器，默认true\nserver.port设定http=监听端口\nserver.servlet-path=设定dispatcher servlet的监听路径，默认为: /\n#############################################################\n#\t\t\t\t\t\tcookie、session配置\n#############################################################\nserver.session.cookie.comment=指定session cookie的comment\nserver.session.cookie.domain=指定session cookie的domain\nserver.session.cookie.http-only=是否开启HttpOnly.\nserver.session.cookie.max-age=设定session cookie的最大age.\nserver.session.cookie.name=设定Session cookie 的名称.\nserver.session.cookie.path=设定session cookie的路径.\nserver.session.cookie.secure=设定session cookie的“Secure” flag.\nserver.session.persistent=重启时是否持久化session，默认false\nserver.session.timeoutsession=的超时时间\nserver.session.tracking-modes=设定Session的追踪模式(cookie, url, ssl).\n#############################################################\n#\t\t\t\t\t\tssl配置\n#############################################################\nserver.ssl.ciphers 是否支持SSL ciphers.\nserver.ssl.client-auth 设定client authentication是wanted 还是 needed.\nserver.ssl.enabled 是否开启ssl，默认: true\nserver.ssl.key-alias 设定key store中key的别名.\nserver.ssl.key-password 访问key store中key的密码.\nserver.ssl.key-store 设定持有SSL certificate的key store的路径，通常是一个.jks文件.\nserver.ssl.key-store-password 设定访问key store的密码.\nserver.ssl.key-store-provider 设定key store的提供者.\nserver.ssl.key-store-type 设定key store的类型.\nserver.ssl.protocol 使用的SSL协议，默认: TLS\nserver.ssl.trust-store 持有SSL certificates的Trust store.\nserver.ssl.trust-store-password 访问trust store的密码.\nserver.ssl.trust-store-provider 设定trust store的提供者.\nserver.ssl.trust-store-type 指定trust store的类型.\n#############################################################\n#\t\t\t\t\t\ttomcat\n#############################################################\nserver.tomcat.access-log-enabled 是否开启access log ，默认: false)\nserver.tomcat.access-log-pattern 设定access logs的格式，默认: common\nserver.tomcat.accesslog.directory 设定log的目录，默认: logs\nserver.tomcat.accesslog.enabled 是否开启access log，默认: false\nserver.tomcat.accesslog.pattern 设定access logs的格式，默认: common\nserver.tomcat.accesslog.prefix 设定Log 文件的前缀，默认: access_log\nserver.tomcat.accesslog.suffix 设定Log 文件的后缀，默认: .log\nserver.tomcat.background-processor-delay 后台线程方法的Delay大小: 30\nserver.tomcat.basedir 设定Tomcat的base 目录，如果没有指定则使用临时目录.\nserver.tomcat.internal-proxies 设定信任的正则表达式，默认:“10.\\d{1,3}.\\d{1,3}.\\d{1,3}| 192.168.\\d{1,3}.\\d{1,3}| 169.254.\\d{1,3}.\\d{1,3}| 127.\\d{1,3}.\\d{1,3}.\\d{1,3}| 172.1[6-9]{1}.\\d{1,3}.\\d{1,3}| 172.2[0-9]{1}.\\d{1,3}.\\d{1,3}|172.3[0-1]{1}.\\d{1,3}.\\d{1,3}”\nserver.tomcat.max-http-header-size 设定http header的最小值，默认: 0\nserver.tomcat.max-threads 设定tomcat的最大工作线程数，默认为: 0\nserver.tomcat.port-header 设定http header使用的，用来覆盖原来port的value.\nserver.tomcat.protocol-header 设定Header包含的协议，通常是 X-Forwarded-Proto，如果remoteIpHeader有值，则将设置为RemoteIpValve.\nserver.tomcat.protocol-header-https-value 设定使用SSL的header的值，默认https.\nserver.tomcat.remote-ip-header 设定remote IP的header，如果remoteIpHeader有值，则设置为RemoteIpValve\nserver.tomcat.uri-encoding 设定URI的解码字符集.\n#############################################################\n#\t\t\t\t\t\tundertow\n#############################################################\nserver.undertow.access-log-dir 设定Undertow access log 的目录，默认: logs\nserver.undertow.access-log-enabled 是否开启access log，默认: false\nserver.undertow.access-log-pattern 设定access logs的格式，默认: common\nserver.undertow.accesslog.dir 设定access log 的目录.\nserver.undertow.buffer-size 设定buffer的大小.\nserver.undertow.buffers-per-region 设定每个region的buffer数\nserver.undertow.direct-buffers 设定堆外内存\nserver.undertow.io-threads 设定I/O线程数.\nserver.undertow.worker-threads 设定工作线程数\n#############################################################\n#\t\t\t\t\t\tdatasource\n#############################################################\nspring.dao.exceptiontranslation.enabled 是否开启PersistenceExceptionTranslationPostProcessor，默认为true\nspring.datasource.abandon-when-percentage-full 设定超时被废弃的连接占到多少比例时要被关闭或上报\nspring.datasource.allow-pool-suspension 使用Hikari pool时，是否允许连接池暂停，默认为: false\nspring.datasource.alternate-username-allowed 是否允许替代的用户名.\nspring.datasource.auto-commit 指定updates是否自动提交.\nspring.datasource.catalog 指定默认的catalog.\nspring.datasource.commit-on-return 设置当连接被归还时，是否要提交所有还未完成的事务\nspring.datasource.connection-init-sql 指定连接被创建，再被添加到连接池之前执行的sql.\nspring.datasource.connection-init-sqls 使用DBCP connection pool时，指定初始化时要执行的sql\nspring.datasource.connection-properties.[key] 在使用DBCP connection pool时指定要配置的属性\nspring.datasource.connection-test-query 指定校验连接合法性执行的sql语句\nspring.datasource.connection-timeout 指定连接的超时时间，毫秒单位.\nspring.datasource.continue-on-error 在初始化数据库时，遇到错误是否继续，默认false\nspring.datasource.data 指定Data (DML)脚本\nspring.datasource.data-source-class-name 指定数据源的全限定名.\nspring.datasource.data-source-jndi 指定jndi的地址\nspring.datasource.data-source-properties.[key] 使用Hikari connection pool时，指定要设置的属性\nspring.datasource.db-properties 使用Tomcat connection pool，指定要设置的属性\nspring.datasource.default-auto-commit 是否自动提交.\nspring.datasource.default-catalog 指定连接默认的catalog.\nspring.datasource.default-read-only 是否设置默认连接只读.\nspring.datasource.default-transaction-isolation 指定连接的事务的默认隔离级别.\nspring.datasource.driver-class-name 指定driver的类名，默认从jdbc url中自动探测.\nspring.datasource.fair-queue 是否采用FIFO返回连接.\nspring.datasource.health-check-properties.[key] 使用Hikari connection pool时，在心跳检查时传递的属性\nspring.datasource.idle-timeout 指定连接多久没被使用时，被设置为空闲，默认为10ms\nspring.datasource.ignore-exception-on-pre-load 当初始化连接池时，是否忽略异常.\nspring.datasource.init-sql 当连接创建时，执行的sql\nspring.datasource.initial-size 指定启动连接池时，初始建立的连接数量\nspring.datasource.initialization-fail-fast 当创建连接池时，没法创建指定最小连接数量是否抛异常\nspring.datasource.initialize 指定初始化数据源，是否用data.sql来初始化，默认: true\nspring.datasource.isolate-internal-queries 指定内部查询是否要被隔离，默认为false\nspring.datasource.jdbc-interceptors 使用Tomcat connection pool时，指定jdbc拦截器，分号分隔\nspring.datasource.jdbc-url 指定JDBC URL.\nspring.datasource.jmx-enabled 是否开启JMX，默认为: false\nspring.datasource.jndi-name 指定jndi的名称.\nspring.datasource.leak-detection-threshold 使用Hikari connection pool时，多少毫秒检测一次连接泄露.\nspring.datasource.log-abandoned 使用DBCP connection pool，是否追踪废弃statement或连接，默认为: false\nspring.datasource.log-validation-errors 当使用Tomcat connection pool是否打印校验错误.\nspring.datasource.login-timeout 指定连接数据库的超时时间.\nspring.datasource.max-active 指定连接池中最大的活跃连接数.\nspring.datasource.max-age 指定连接池中连接的最大年龄\nspring.datasource.max-idle 指定连接池最大的空闲连接数量.\nspring.datasource.max-lifetime 指定连接池中连接的最大生存时间，毫秒单位.\nspring.datasource.max-open-prepared-statements 指定最大的打开的prepared statements数量.\nspring.datasource.max-wait 指定连接池等待连接返回的最大等待时间，毫秒单位.\nspring.datasource.maximum-pool-size 指定连接池最大的连接数，包括使用中的和空闲的连接.\nspring.datasource.min-evictable-idle-time-millis 指定一个空闲连接最少空闲多久后可被清除.\nspring.datasource.min-idle 指定必须保持连接的最小值(For DBCP and Tomcat connection pools)\nspring.datasource.minimum-idle 指定连接维护的最小空闲连接数，当使用HikariCP时指定.\nspring.datasource.name 指定数据源名.\nspring.datasource.num-tests-per-eviction-run 指定运行每个idle object evictor线程时的对象数量\nspring.datasource.password 指定数据库密码.\nspring.datasource.platform 指定schema要使用的Platform(schema-${platform}.sql)，默认为: all\nspring.datasource.pool-name 指定连接池名字.\nspring.datasource.pool-prepared-statements 指定是否池化statements.\nspring.datasource.propagate-interrupt-state 在等待连接时，如果线程被中断，是否传播中断状态.\nspring.datasource.read-only 当使用Hikari connection pool时，是否标记数据源只读\nspring.datasource.register-mbeans 指定Hikari connection pool是否注册JMX MBeans.\nspring.datasource.remove-abandoned 指定当连接超过废弃超时时间时，是否立刻删除该连接.\nspring.datasource.remove-abandoned -timeout指定连接应该被废弃的时间.\nspring.datasource.rollback-on-return 在归还连接时，是否回滚等待中的事务.\nspring.datasource.schema 指定Schema (DDL)脚本.\nspring.datasource.separator 指定初始化脚本的语句分隔符，默认: ;\nspring.datasource.sql-script-encoding 指定SQL scripts编码.\nspring.datasource.suspect-timeout 指定打印废弃连接前的超时时间.\nspring.datasource.test-on-borrow 当从连接池借用连接时，是否测试该连接.\nspring.datasource.test-on-connect 创建时，是否测试连接\nspring.datasource.test-on-return 在连接归还到连接池时是否测试该连接.\nspring.datasource.test-while-idle 当连接空闲时，是否执行连接测试.\nspring.datasource.time-between-eviction-runs-millis 指定空闲连接检查、废弃连接清理、空闲连接池大小调整之间的操作时间间隔\nspring.datasource.transaction-isolation 指定事务隔离级别，使用Hikari connection pool时指定\nspring.datasource.url 指定JDBC URL.\nspring.datasource.use-disposable-connection-facade 是否对连接进行包装，防止连接关闭之后被使用.\nspring.datasource.use-equals 比较方法名时是否使用String.equals()替换==.\nspring.datasource.use-lock 是否对连接操作加锁\nspring.datasource.username 指定数据库名.\nspring.datasource.validation-interval 指定多少ms执行一次连接校验.\nspring.datasource.validation-query 指定获取连接时连接校验的sql查询语句.\nspring.datasource.validation-query-timeout 指定连接校验查询的超时时间.\nspring.datasource.validation-timeout 设定连接校验的超时时间，当使用Hikari connection pool时指定\nspring.datasource.validator-class-name 用来测试查询的validator全限定名.\nspring.datasource.xa.data-source-class-name 指定数据源的全限定名.\nspring.datasource.xa.properties 指定传递给XA data source的属性\n#############################################################\n#\t\t\t\t\t\tJPA\n#############################################################\nspring.jpa.database 指定目标数据库.\nspring.jpa.database-platform 指定目标数据库的类型.\nspring.jpa.generate-ddl 是否在启动时初始化schema，默认为false\nspring.jpa.hibernate.ddl-auto 指定DDL mode (none, validate, update, create, create-drop). 当使用内嵌数据库时，默认是create-drop，否则为none.\nspring.jpa.hibernate.naming-strategy 指定命名策略.\nspring.jpa.open-in-view 是否注册OpenEntityManagerInViewInterceptor，绑定JPA EntityManager到请求线程中，默认为: true\nspring.jpa.properties 添加额外的属性到JPA provider.\nspring.jpa.show-sql 是否开启sql的log，默认为: false\n\n#############################################################\n#\t\t\t\t\t\tjooq\n#############################################################\nspring.jooq.sql-dialect 指定JOOQ使用的SQLDialect，比如POSTGRES.\n#############################################################\n#\t\t\t\t\t\th2\n#############################################################\nspring.h2.console.enabled 是否开启控制台，默认为false\nspring.h2.console.path 指定控制台路径，默认为: /h2-console\n#############################################################\n#\t\t\t\t\t\tJTA\n#############################################################\nspring.jta.allow-multiple-lrc 是否允许 multiple LRC，默认为: false\nspring.jta.asynchronous2-pc 指定两阶段提交是否可以异步，默认为: false\nspring.jta.background-recovery-interval 指定多少分钟跑一次recovery process，默认为: 1\nspring.jta.background-recovery-interval-seconds 指定多久跑一次recovery process，默认: 60\nspring.jta.current-node-only-recovery 是否过滤掉其他非本JVM的recovery，默认为: true\nspring.jta.debug-zero-resource-transaction 是否追踪没有使用指定资源的事务，默认为: false\nspring.jta.default-transaction-timeout 设定默认的事务超时时间，默认为60\nspring.jta.disable-jmx 是否禁用jmx，默认为false\nspring.jta.enabled 是否开启JTA support，默认为: true\nspring.jta.exception-analyzer 设置指定的异常分析类\nspring.jta.filter-log-status 使用Bitronix Transaction Manager时，是否写mandatory logs，开启的话，可以节省磁盘空间，但是调试会复杂写，默认为false\nspring.jta.force-batching-enabled 使用Bitronix Transaction Manager时，是否批量写磁盘，默认为true.\nspring.jta.forced-write-enabled 使用Bitronix Transaction Manager时，是否强制写日志到磁盘，默认为true\nspring.jta.graceful-shutdown-interval 当使用Bitronix Transaction Manager，指定shutdown时等待事务结束的时间，超过则中断，默认为60\nspring.jta.jndi-transaction-synchronization-registry-name 当使用Bitronix Transaction Manager时，在JNDI下得事务同步registry，默认为: java:comp/TransactionSynchronizationRegistry\nspring.jta.jndi-user-transaction-name 指定在JNDI使用Bitronix Transaction Manager的名称，默认:java:comp/UserTransaction\nspring.jta.journal 当使用Bitronix Transaction Manager，指定The journal是否disk还是null还是一个类的全限定名，默认disk\nspring.jta.log-dirTransaction logs directory.\nspring.jta.log-part1-filename 指定The journal fragment文件1的名字，默认: btm1.tlog\nspring.jta.log-part2-filename 指定The journal fragment文件2的名字，默认: btm2.tlog\nspring.jta.max-log-size-in-mb 指定journal fragments大小的最大值. 默认: 2M\nspring.jta.resource-configuration-filename 指定Bitronix Transaction Manager配置文件名.\nspring.jta.server-id 指定Bitronix Transaction Manager实例的id.\nspring.jta.skip-corrupted-logs 是否忽略corrupted log files文件，默认为false.\nspring.jta.transaction-manager-id 指定Transaction manager的唯一标识.\nspring.jta.warn-about-zero-resource-transaction 当使用Bitronix Transaction Manager时，是否对没有使用指定资源的事务进行警告，默认为: true\n#############################################################\n#\t\t\t\t\t\tcache\n#############################################################\nspring.cache.cache-names 指定要创建的缓存的名称，逗号分隔(若该缓存实现支持的话)\nspring.cache.ehcache.config 指定初始化EhCache时使用的配置文件的位置指定.\nspring.cache.guava.spec 指定创建缓存要使用的spec，具体详见CacheBuilderSpec.\nspring.cache.hazelcast.config 指定初始化Hazelcast时的配置文件位置\nspring.cache.infinispan.config 指定初始化Infinispan时的配置文件位置.\nspring.cache.jcache.config 指定jcache的配置文件.\nspring.cache.jcache.provider 指定CachingProvider实现类的全限定名.\nspring.cache.type 指定缓存类型\n#############################################################\n#\t\t\t\t\t\tmongodb\n#############################################################\nspring.mongodb.embedded.features 指定要开启的特性，逗号分隔.\nspring.mongodb.embedded.version 指定要使用的版本，默认: 2.6.10\n#############################################################\n#\t\t\t\t\t\tredis\n#############################################################\nspring.redis.database 指定连接工厂使用的Database index，默认为: 0\nspring.redis.host 指定Redis server host，默认为: localhost\nspring.redis.password 指定Redis server的密码\nspring.redis.pool.max-active 指定连接池最大的活跃连接数，-1表示无限，默认为8\nspring.redis.pool.max-idle 指定连接池最大的空闲连接数，-1表示无限，默认为8\nspring.redis.pool.max-wait 指定当连接池耗尽时，新获取连接需要等待的最大时间，以毫秒单位，-1表示无限等待\nspring.redis.pool.min-idle 指定连接池中空闲连接的最小数量，默认为0\nspring.redis.port 指定redis服务端端口，默认: 6379\nspring.redis.sentinel.master 指定redis server的名称\nspring.redis.sentinel.nodes 指定sentinel节点，逗号分隔，格式为host:port.\nspring.redis.timeout 指定连接超时时间，毫秒单位，默认为0\n#############################################################\n#\t\t\t\t\t\tspringdata\n#############################################################\nspring.data.elasticsearch.cluster-name 指定es集群名称，默认: elasticsearch\nspring.data.elasticsearch.cluster-nodes 指定es的集群，逗号分隔，不指定的话，则启动client node.\nspring.data.elasticsearch.properties 指定要配置的es属性.\nspring.data.elasticsearch.repositories.enabled 是否开启es存储，默认为: true\nspring.data.jpa.repositories.enabled 是否开启JPA支持，默认为: true\nspring.data.mongodb.authentication-database 指定鉴权的数据库名\nspring.data.mongodb.database 指定mongodb数据库名\nspring.data.mongodb.field-naming-strategy 指定要使用的FieldNamingStrategy.\nspring.data.mongodb.grid-fs-database 指定GridFS database的名称.\nspring.data.mongodb.host 指定Mongo server host.\nspring.data.mongodb.password 指定Mongo server的密码.\nspring.data.mongodb.port 指定Mongo server port.\nspring.data.mongodb.repositories.enabled 是否开启mongodb存储，默认为true\nspring.data.mongodb.uri 指定Mongo database URI.默认:mongodb://localhost/test\nspring.data.mongodb.username 指定登陆mongodb的用户名.\nspring.data.rest.base-path 指定暴露资源的基准路径.\nspring.data.rest.default-page-size 指定每页的大小，默认为: 20\nspring.data.rest.limit-param-name 指定limit的参数名，默认为: size\nspring.data.rest.max-page-size 指定最大的页数，默认为1000\nspring.data.rest.page-param-name 指定分页的参数名，默认为: page\nspring.data.rest.return-body-on-create 当创建完实体之后，是否返回body，默认为false\nspring.data.rest.return-body-on-update 在更新完实体后，是否返回body，默认为false\nspring.data.rest.sort-param-name 指定排序使用的key，默认为: sort\nspring.data.solr.host 指定Solr host，如果有指定了zk的host的话，则忽略。默认为: http://127.0.0.1:8983/solr\nspring.data.solr.repositories.enabled 是否开启Solr repositories，默认为: true\nspring.data.solr.zk-host 指定zk的地址，格式为HOST:PORT.\n#############################################################\n#\t\t\t\t\t\tactivemq\n#############################################################\nspring.activemq.broker-url 指定ActiveMQ broker的URL，默认自动生成.\nspring.activemq.in-memory 是否是内存模式，默认为true.\nspring.activemq.password 指定broker的密码.\nspring.activemq.pooled 是否创建PooledConnectionFactory，而非ConnectionFactory，默认false\nspring.activemq.user 指定broker的用户.\n#############################################################\n#\t\t\t\t\t\tartemis(HornetQ捐献给apache后的版本)\n#############################################################\nspring.artemis.embedded.cluster-password 指定集群的密码，默认是启动时随机生成.\nspring.artemis.embedded.data-directory 指定Journal文件的目录.如果不开始持久化则不必要指定.\nspring.artemis.embedded.enabled 是否开启内嵌模式，默认true\nspring.artemis.embedded.persistent 是否开启persistent store，默认false.\nspring.artemis.embedded.queues 指定启动时创建的队列，多个用逗号分隔，默认: []\nspring.artemis.embedded.server-id 指定Server ID. 默认是一个自增的数字，从0开始.\nspring.artemis.embedded.topics 指定启动时创建的topic，多个的话逗号分隔，默认: []\nspring.artemis.host 指定Artemis broker 的host. 默认: localhost\nspring.artemis.mode 指定Artemis 的部署模式, 默认为auto-detected(也可以为native or embedded).\nspring.artemis.port 指定Artemis broker 的端口，默认为: 61616\n#############################################################\n#\t\t\t\t\t\trabbitmq\n#############################################################\nspring.rabbitmq.addresses 指定client连接到的server的地址，多个以逗号分隔.\nspring.rabbitmq.dynamic 是否创建AmqpAdmin bean. 默认为: true)\nspring.rabbitmq.host 指定RabbitMQ host.默认为: localhost)\nspring.rabbitmq.listener.acknowledge-mode 指定Acknowledge的模式.\nspring.rabbitmq.listener.auto-startup 是否在启动时就启动mq，默认: true)\nspring.rabbitmq.listener.concurrency 指定最小的消费者数量.\nspring.rabbitmq.listener.max-concurrency 指定最大的消费者数量.\nspring.rabbitmq.listener.prefetch 指定一个请求能处理多少个消息，如果有事务的话，必须大于等于transaction数量.\nspring.rabbitmq.listener.transaction-size 指定一个事务处理的消息数量，最好是小于等于prefetch的数量.\nspring.rabbitmq.password 指定broker的密码.\nspring.rabbitmq.port 指定RabbitMQ 的端口，默认: 5672)\nspring.rabbitmq.requested-heartbeat 指定心跳超时，0为不指定.\nspring.rabbitmq.ssl.enabled 是否开始SSL，默认: false)\nspring.rabbitmq.ssl.key-store 指定持有SSL certificate的key store的路径\nspring.rabbitmq.ssl.key-store-password 指定访问key store的密码.\nspring.rabbitmq.ssl.trust-store 指定持有SSL certificates的Trust store.\nspring.rabbitmq.ssl.trust-store-password 指定访问trust store的密码.\nspring.rabbitmq.username 指定登陆broker的用户名.\nspring.rabbitmq.virtual-host 指定连接到broker的Virtual host.\n#############################################################\n#\t\t\t\t\t\thornetq\n#############################################################\nspring.hornetq.embedded.cluster-password 指定集群的密码，默认启动时随机生成.\nspring.hornetq.embedded.data-directory 指定Journal file 的目录. 如果不开启持久化则不必指定.\nspring.hornetq.embedded.enabled 是否开启内嵌模式，默认:true\nspring.hornetq.embedded.persistent 是否开启persistent store，默认: false\nspring.hornetq.embedded.queues 指定启动是创建的queue，多个以逗号分隔，默认: []\nspring.hornetq.embedded.server-id 指定Server ID. 默认使用自增数字，从0开始.\nspring.hornetq.embedded.topics 指定启动时创建的topic，多个以逗号分隔，默认: []\nspring.hornetq.host 指定HornetQ broker 的host，默认: localhost\nspring.hornetq.mode 指定HornetQ 的部署模式，默认是auto-detected，也可以指定native 或者 embedded.\nspring.hornetq.port 指定HornetQ broker 端口，默认: 5445\n#############################################################\n#\t\t\t\t\t\tjms\n#############################################################\nspring.jms.jndi-name 指定Connection factory JNDI 名称.\nspring.jms.listener.acknowledge-mode 指定ack模式，默认自动ack.\nspring.jms.listener.auto-startup 是否启动时自动启动jms，默认为: true\nspring.jms.listener.concurrency 指定最小的并发消费者数量.\nspring.jms.listener.max-concurrency 指定最大的并发消费者数量.\nspring.jms.pub-sub-domain 是否使用默认的destination type来支持 publish/subscribe，默认: false\n#############################################################\n#\t\t\t\t\t\tsecurity\n#############################################################\nsecurity.basic.authorize-mode 要使用权限控制模式.\nsecurity.basic.enabled 是否开启基本的鉴权，默认为true\nsecurity.basic.path 需要鉴权的path，多个的话以逗号分隔，默认为[/**]\nsecurity.basic.realm HTTP basic realm 的名字，默认为Spring\nsecurity.enable-csrf 是否开启cross-site request forgery校验，默认为false.\nsecurity.filter-order Security filter chain的order，默认为0\nsecurity.headers.cache 是否开启http头部的cache控制，默认为false.\nsecurity.headers.content-type 是否开启X-Content-Type-Options头部，默认为false.\nsecurity.headers.frame 是否开启X-Frame-Options头部，默认为false.\nsecurity.headers.hsts 指定HTTP Strict Transport Security (HSTS)模式(none, domain, all).\nsecurity.headers.xss 是否开启cross-site scripting (XSS) 保护，默认为false.\nsecurity.ignored 指定不鉴权的路径，多个的话以逗号分隔.\nsecurity.oauth2.client.access-token-uri 指定获取access token的URI.\nsecurity.oauth2.client.access-token-validity-seconds 指定access token失效时长.\nsecurity.oauth2.client.additional-information.[key] 设定要添加的额外信息.\nsecurity.oauth2.client.authentication-scheme 指定传输不记名令牌(bearer token)的方式(form, header, none,query)，默认为header\nsecurity.oauth2.client.authorities 指定授予客户端的权限.\nsecurity.oauth2.client.authorized-grant-types 指定客户端允许的grant types.\nsecurity.oauth2.client.auto-approve-scopes 对客户端自动授权的scope.\nsecurity.oauth2.client.client-authentication-scheme 传输authentication credentials的方式(form, header, none, query)，默认为header方式\nsecurity.oauth2.client.client-id 指定OAuth2 client ID.\nsecurity.oauth2.client.client-secret 指定OAuth2 client secret. 默认是一个随机的secret.\nsecurity.oauth2.client.grant-type 指定获取资源的access token的授权类型.\nsecurity.oauth2.client.id 指定应用的client ID.\nsecurity.oauth2.client.pre-established-redirect-uri 服务端pre-established的跳转URI.\nsecurity.oauth2.client.refresh-token-validity-seconds 指定refresh token的有效期.\nsecurity.oauth2.client.registered-redirect-uri 指定客户端跳转URI，多个以逗号分隔.\nsecurity.oauth2.client.resource-ids 指定客户端相关的资源id，多个以逗号分隔.\nsecurity.oauth2.client.scopeclient 的scope\nsecurity.oauth2.client.token-name 指定token的名称\nsecurity.oauth2.client.use-current-uri 是否优先使用请求中URI，再使用pre-established的跳转URI. 默认为true\nsecurity.oauth2.client.user-authorization-uri 用户跳转去获取access token的URI.\nsecurity.oauth2.resource.id 指定resource的唯一标识.\nsecurity.oauth2.resource.jwt.key-uri JWT token的URI. 当key为公钥时，或者value不指定时指定.\nsecurity.oauth2.resource.jwt.key-value JWT token验证的value. 可以是对称加密或者PEMencoded RSA公钥. 可以使用URI作为value.\nsecurity.oauth2.resource.prefer-token-info 是否使用token info，默认为true\nsecurity.oauth2.resource.service-id 指定service ID，默认为resource.\nsecurity.oauth2.resource.token-info-uritoken 解码的URI.\nsecurity.oauth2.resource.token-type 指定当使用userInfoUri时，发送的token类型.\nsecurity.oauth2.resource.user-info-uri 指定user info的URI\nsecurity.oauth2.sso.filter-order 如果没有显示提供WebSecurityConfigurerAdapter时指定的Filter order.\nsecurity.oauth2.sso.login-path 跳转到SSO的登录路径默认为/login.\nsecurity.require-ssl 是否对所有请求开启SSL，默认为false.\nsecurity.sessions 指定Session的创建策略(always, never, if_required, stateless).\nsecurity.user.name 指定默认的用户名，默认为user.\nsecurity.user.password 默认的用户密码.\nsecurity.user.role 默认用户的授权角色.\n#############################################################\n#\tSpringBoot支持了两种数据库迁移工具，一个是flyway，一个是liquibase。其本身也支持sql script，在初始化数据源之后执行指定的脚本。\n#\tflyway\n#############################################################\nflyway.baseline-description 对执行迁移时基准版本的描述.\nflyway.baseline-on-migrate 当迁移时发现目标schema非空，而且带有没有元数据的表时，是否自动执行基准迁移，默认false.\nflyway.baseline-version 开始执行基准迁移时对现有的schema的版本打标签，默认值为1.\nflyway.check-location 检查迁移脚本的位置是否存在，默认false.\nflyway.clean-on-validation-error 当发现校验错误时是否自动调用clean，默认false.\nflyway.enabled 是否开启flywary，默认true.\nflyway.encoding 设置迁移时的编码，默认UTF-8.\nflyway.ignore-failed-future-migration 当读取元数据表时是否忽略错误的迁移，默认false.\nflyway.init-sqls 当初始化好连接时要执行的SQL.\nflyway.locations 迁移脚本的位置，默认db/migration.\nflyway.out-of-order 是否允许无序的迁移，默认false.\nflyway.password 目标数据库的密码.\nflyway.placeholder-prefix 设置每个placeholder的前缀，默认${.\nflyway.placeholder-replacementplaceholders 是否要被替换，默认true.\nflyway.placeholder-suffix 设置每个placeholder的后缀，默认}.\nflyway.placeholders.[placeholder name] 设置placeholder的value\nflyway.schemas 设定需要flywary迁移的schema，大小写敏感，默认为连接默认的schema.\nflyway.sql-migration-prefix 迁移文件的前缀，默认为V.\nflyway.sql-migration-separator 迁移脚本的文件名分隔符，默认__\nflyway.sql-migration-suffix 迁移脚本的后缀，默认为.sql\nflyway.tableflyway 使用的元数据表名，默认为schema_version\nflyway.target 迁移时使用的目标版本，默认为latest version\nflyway.url 迁移时使用的JDBC URL，如果没有指定的话，将使用配置的主数据源\nflyway.user 迁移数据库的用户名\nflyway.validate-on-migrate 迁移时是否校验，默认为true.\n#############################################################\n#\t\t\t\t\t\tliquibase\n#############################################################\nliquibase.change-logChange log 配置文件的路径，默认值为classpath:/db/changelog/db.changelog-master.yaml\nliquibase.check-change-log-location 是否坚持change log的位置是否存在，默认为true.\nliquibase.contexts 逗号分隔的运行时context列表.\nliquibase.default-schema 默认的schema.\nliquibase.drop-first 是否首先drop schema，默认为false\nliquibase.enabled 是否开启liquibase，默认为true.\nliquibase.password 目标数据库密码\nliquibase.url 要迁移的JDBC URL，如果没有指定的话，将使用配置的主数据源.\nliquibase.user 目标数据用户名\n#############################################################\n#\t\t\t\t\t\taop\n#############################################################\nspring.aop.auto 是否支持@EnableAspectJAutoProxy，默认为: true\nspring.aop.proxy-target-classtrue 为使用CGLIB代理，false为JDK代理，默认为false\n#############################################################\n#\t\t\t\t\t\tapplication\n#############################################################\nspring.application.admin.enabled 是否启用admin特性，默认为: false\nspring.application.admin.jmx-name 指定admin MBean的名称，默认为: org.springframework.boot:type=Admin,name=SpringApplication\n#############################################################\n#\t\t\t\t\t\tautoconfig\n#############################################################\nspring.autoconfigure.exclude 配置要排除的Auto-configuration classes.\n#############################################################\n#\t\t\t\t\t\tbatch\n#############################################################\nspring.batch.initializer.enabled 是否在必要时创建batch表，默认为true\nspring.batch.job.enabled 是否在启动时开启batch job，默认为true\nspring.batch.job.names 指定启动时要执行的job的名称，逗号分隔，默认所有job都会被执行\nspring.batch.schema 指定要初始化的sql语句路径，默认:classpath:org/springframework/batch/core/schema-@@platform@@.sql)\nspring.batch.table-prefix 指定批量处理的表的前缀.\n#############################################################\n#\t\t\t\t\t\tjmx\n#############################################################\nspring.jmx.default-domain 指定JMX domain name.\nspring.jmx.enabled 是否暴露jmx，默认为true\nspring.jmx.server 指定MBeanServer bean name. 默认为: mbeanServer)\n#############################################################\n#\t\t\t\t\t\tmail\n#############################################################\nspring.mail.default-encoding 指定默认MimeMessage的编码，默认为: UTF-8\nspring.mail.hos t指定SMTP server host.\nspring.mail.jndi-name 指定mail的jndi名称\nspring.mail.password 指定SMTP server登陆密码.\nspring.mail.port 指定SMTP server port.\nspring.mail.properties 指定JavaMail session属性.\nspring.mail.protocol 指定SMTP server使用的协议，默认为: smtp\nspring.mail.test-connection 指定是否在启动时测试邮件服务器连接，默认为false\nspring.mail.username 指定SMTP server的用户名.\n#############################################################\n#\t\t\t\t\t\tsendgrid\n#############################################################\nspring.sendgrid.password 指定SendGrid password.\nspring.sendgrid.proxy.host 指定SendGrid proxy host.\nspring.sendgrid.proxy.port 指定SendGrid proxy port.\nspring.sendgrid.username 指定SendGrid username.\n#############################################################\n#\t\t\t\t\t\tsocial\n#############################################################\nspring.social.auto-connection-views 是否开启连接状态的视图，默认为false\nspring.social.facebook.app-id 指定应用id\nspring.social.facebook.app-secret 指定应用密码\nspring.social.linkedin.app-id 指定应用id\nspring.social.linkedin.app-secret 指定应用密码\nspring.social.twitter.app-id 指定应用ID.\nspring.social.twitter.app-secret 指定应用密码\n```', 'title': 'SpringBoot配置大全', 'categories': ['[随笔分类]Java~SpringBoot'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12610088.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12610088.html', 'postid': '12610088', 'source': {}, 'userid': '-2'}