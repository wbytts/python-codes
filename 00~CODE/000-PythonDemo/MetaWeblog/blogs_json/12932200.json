{'dateCreated': <DateTime '20200521T17:37:00' at 0x1a4f25197c8>, 'description': "https://www.cnblogs.com/lgl1209/p/11527080.html\n\n1.  Ajax携带cookie的两种方式\n\n\u3000\u3000场景：\n\n\u3000\u3000后台需要前端的ajax请求携带上cookie值，因为cookie上面有用户的userId的加密信息或者是token。\n \n\u3000\u3000\n\u3000\u3000解决步骤：\n\u3000\u30001、服务器方面，添加@CrossOrigin注解到controller层上。-----》解决服务端允许前端跨域问题。\n\u3000\u30002、前端方面：必须要注意的点是：浏览器的同源策略问题----》就是域名必须要一致，否则，ajax是不会携带非同源的cookie的。-----》怎样解决这个同源的问题呢？-----》如果前端同事懂的话，可以用node.js去配置代理---》如果是后台同事懂的话，可以用nginx去配置反向代理------》目的是：让域名保持一致！！！！！\n \n\u3000\u3000ajax请求\n\u3000\u3000a.  第一种\n\u3000\u3000$.ajax({\n\u3000\u3000\u3000\u3000url: 'www.baidu.com',\n\u3000\u3000\u3000\u3000type: 'post',\n\u3000\u3000\u3000\u3000data: '',\n\u3000\u3000\u3000\u3000//  默认情况下，标准的跨域请求是不会发送cookie的\n\u3000\u3000\u3000\u3000xhrFields: {\n\u3000\u3000\u3000\u3000\u3000\u3000withCredentials: true\n\u3000\u3000\u3000\u3000},\n\u3000\u3000\u3000\u3000success: (rs) {\n\u3000\u3000\u3000\u3000}\n\u3000\u3000})\n \n\u3000\u3000b.  第二种 /  因为有时候第一种情况cookie也是携带不过去的，可以通过fiddle 4抓包看\n\u3000\u3000$.ajax({\n\u3000\u3000\u3000\u3000url: 'www.baidu.com',\n\u3000\u3000\u3000\u3000type: 'post',\n\u3000\u3000\u3000\u3000data: '',\n\u3000\u3000\u3000\u3000//  默认情况下，标准的跨域请求是不会发送cookie的\n\u3000\u3000\u3000\u3000beforeSend: function (xhr) {\n\u3000\u3000\u3000\u3000\u3000\u3000xhr.withCredentials = true\n\u3000\u3000\u3000\u3000},\n\u3000\u3000\u3000\u3000success: (rs) {\n\u3000\u3000\u3000\u3000}\n\u3000\u3000})", 'title': '转：ajax携带cookie的两种方式', 'categories': ['[随笔分类]FrontEnd~'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12932200.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12932200.html', 'postid': '12932200', 'source': {}, 'userid': '-2'}