{'dateCreated': <DateTime '20200215T21:17:00' at 0x1a4f2580448>, 'description': '![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200215211652645-1602627608.png)\n![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200215211659222-1796269702.png)\n![](https://img2018.cnblogs.com/blog/1446249/202002/1446249-20200215211706978-1069168892.png)\n\n```c++\n#include <opencv2/opencv.hpp>\n#include <iostream>\n\nusing namespace cv;\nusing namespace std;\n\n\nint main(int argc, char** argv)\n{\n    Mat src = imread("f:/images/shuang001.jpg");\n    if (src.empty())\n    {\n        printf("Could not find the image!\\n");\n        return -1;\n    }\n\n    namedWindow("input", WINDOW_AUTOSIZE);\n    imshow("input", src);\n\n    Mat gray, binary;\n    cvtColor(src, gray, COLOR_BGR2GRAY);\n    imshow("gray", gray);\n\n    // 均值分割\n    Scalar m = mean(gray);\n    printf("means: %.2f\\n", m[0]);\n    threshold(gray, binary, m[0], 255, THRESH_BINARY);\n    imshow("binary", binary);\n\n    // 直方图\n    threshold(gray, binary, 0, 255, THRESH_BINARY | THRESH_OTSU);\n\n    // 自适应阈值二值化\n    adaptiveThreshold(gray, binary, 255, ADAPTIVE_THRESH_GAUSSIAN_C, THRESH_BINARY, 25, 10);\n    imshow("ADAPTIVE_THRESH_GAUSSIAN_C ", binary);\n\n    adaptiveThreshold(gray, binary, 255, ADAPTIVE_THRESH_MEAN_C, THRESH_BINARY, 25, 10);\n    imshow("ADAPTIVE_THRESH_MEAN_C ", binary);\n\n    waitKey(0);\n    destroyAllWindows();\n\n    return 0;\n}\n```', 'title': 'opencv：自适应阈值', 'categories': ['[随笔分类]OpenCV'], 'enclosure': {'length': 0}, 'link': 'https://www.cnblogs.com/wbyixx/p/12313746.html', 'permalink': 'https://www.cnblogs.com/wbyixx/p/12313746.html', 'postid': '12313746', 'source': {}, 'userid': '-2'}